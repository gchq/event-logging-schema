[{"body":"The schema aims to provide a structure for describing all forms of auditable events in a structured and consistent way. The benefit of the schema is that events translated into it are all in a consistent normalised form enabling common processing of the translated events.\nEach action performed by a user, system or application component during the course of operation produces one or more events. Some of these events need to be recorded for the purposes of audit.\nIn order for event data to be useful each event must contain the following information:\n When did it happen? – What was the time when the event occurred? Who is responsible? – Who was the user and/or device that caused the event to occur? Where did it happen? – Where was the user and/or device located when the event happened? What happened? – What data was created, updated, deleted etc?  When did it happen? It is important for analysts to be able to understand the order in which events occurred and what events are related. To do this it is vitally important that all events are recorded with an accurate time, ideally down to millisecond precision.\nA single task performed by an end user may result in many events being raised by several devices. Because each device records events separately, clocks must be synchronised between devices so that it is possible for the analysts to determine the order in which events occurred across devices.\nSome non-interactive events are attributable to a user but may run as scheduled jobs or as asynchronous tasks (see Run As). As a result the time of the event will not be the same as when the user interacted with the system. Where this is the case analysts may not be able to determine the exact order of events.\nIn some cases devices being used by an end user may be located in different time zones, e.g. a user may be interacting with a client machine in one country while the server is in a different country. For this reason all times must be recorded in UTC (a.k.a. Zulu Time denoted Z). The DeviceComplexType structure provides a means for recording the time zone of the devices involved in the event.\nFor consistency times should be zero filled where the source devices do not record times to the nearest millisecond, e.g. if a time is only recorded to the nearest minute then the end of the time string would be 00.000Z.\nWho or what caused it? When recording any events it is important for analysts to know the source of the event.\nMost events will be raised as a result of user interaction with a device, however some occur as a result of a device process (e.g. OS start-up) or scheduled task (e.g. cron job) and therefore have no attributable user or are attributable to a processing user account.\nIn many cases an event may be the result of a user performing an action on a server via a client terminal.\nWhere an event has been raised in this way the event log should record information about the user, client terminal and device that recorded the event.\nIn most cases the server will identify the user via PKI or username \u0026 password authentication. The server will also be aware of the IP Address of the client computer that they have connected from.\nWhere an event is raised as a result of direct user interaction the user must always be recorded.\nIn some instances a user may be performing an action using elevated privileges or through another user account, e.g. when using sudo in Linux. In these instances it is important to capture both the user that initiated the event and the account that they performed the event as (the Run As user).\nWhere did it happen? Analysis of event data often relies on knowledge about the geographic location of the user and associated devices used when the event log is generated. Because of this the schema allows for the location to be provided for each device including the client terminal in use when the event was raised.\nIn addition to location information other attributes of the devices involved in the generation of an event can be added including the IP address, FQDN, MAC address and Port.\nWhat happened? There are many different types of event that are recorded for analysis. These include user logon, log off, search, delete, view etc.\nEach type of event needs to include specific data that is relevant to the event, e.g. logon would need to contain details of the user who logged on.\nThe schema includes a number of ‘schema actions’ that encompass most auditable events, e.g. Create, Update, Export, Send, etc. Where an event has to be recorded that doesn’t fit into one of these predefined categories then the Unknown ‘schema action’ can be used, but this should be a last resort as its content is unstructured and reduces the normalisation benefits.\nPutting it all together It can be hard to imagine what complete events look like, so a number of complete examples are available.\n","categories":"","description":"This documentation describes the _event-logging_ XML Schema herein referred to as the 'schema'. This is a guide for anybody interested in using the schema for recording auditable events and includes details of the structure, features and common usage.\n","excerpt":"This documentation describes the _event-logging_ XML Schema herein …","ref":"/docs/introduction/","tags":"","title":"Introduction"},{"body":"We love pull requests and we want to make it as easy as possible to contribute changes.\nGetting started  Make sure you have a GitHub account    . Maybe create a GitHub issue    . Is this a comment or documentation change? Does an issue already exist? If you need an issue then describe it in as much detail as you can, e.g. step-by-step to reproduce. Fork the repository repository    on GitHub. Clone your fork of the repository. Create a branch for your change, probably from the master branch. Please don’t work on master. Convention is for the branch name to include the issue number like so: git checkout -b gh-1234-fix-thing-x.  Making changes  New elements should have \u003cxs:annotation\u003e elements attached to them to provide documentation about the element. You should also update the documentation for any changes. The revised schema should be valid XML and successfully validate against the XMLSchema standard. Be very mindful of making breaking changes. New elements should in most cases be optional as not all source systems can provide all data fields. Enforcing mandatory data can be done outside of the schema.  Submitting changes  Sign the Contributor Licence Agreement. Push your changes to your fork. Submit a pull request    . We’ll look at it pretty soon after it’s submitted, and we aim to respond within one week.  Getting it accepted Here are some things you can do to make this all smoother:\n If you think it might be controversial then discuss it with us beforehand, via a GitHub issue. Write a good commit message    ).  ","categories":"","description":"How to make contributions to the event-logging schema.\n","excerpt":"How to make contributions to the event-logging schema.\n","ref":"/community/dev-guide/contributing/","tags":"","title":"Contributing"},{"body":"Prerequisites In order to build and contribute to the documentation you will need the following installed:\n bash  Docker      Docker is required as all the build steps are performed in docker containers to ensure a consistent and known build environment. It also ensures that the local build environment matches that used in GitHub actions.\nIt is possible to build the docs without docker but you would need to install all the other dependencies that are provided in the docker images, hugo, npm, etc.\nCloning the event-logging-schema git repository The git repository for this site is event-logging-schema    . event-logging-schema uses the Docsy theme (themes/docsy/) which is pulled in via Go modules. To clone the repository:\n# Clone the repo git clone https://github.com/gchq/event-logging-schema.git (out)Cloning into 'event-logging-schema'... (out)remote: Enumerating objects: 66006, done. (out)remote: Counting objects: 100% (7916/7916), done. (out)remote: Compressing objects: 100% (1955/1955), done. (out)remote: Total 66006 (delta 3984), reused 7417 (delta 3603), pack-reused 58090 (out)Receiving objects: 100% (66006/66006), 286.61 MiB | 7.31 MiB/s, done. (out)Resolving deltas: 100% (34981/34981), done. cd event-logging-schema   Running a local server The documentation can be built and served locally while developing it. To build and serve the site run\n./container_build/runInHugoDocker.sh server   This uses Hugo to build the site in memory and then serve it from a local web server. When any source files are changed or added Hugo will detect this and rebuild the site as required, including automatically refreshing the browser page to update the rendered view.\nOnce the server is running the site is available at localhost:1313    .\nWarning Sometimes changes made to the site source will not be re-loaded correctly so it may be necessary to stop and re-start the server.  Building the site locally To perform a full build of the static site run:\n./container_build/runInHugoDocker.sh build   This will generate all the static content and place it in public/.\nGenerating the PDF Every page has a Print entire section link that will display a printable view of that section and its children. In addition to this the GitHub Actions we generate a PDF of the docs section and all its children, i.e. all of the documentation (but not News/Releases or Community) in one PDF. This makes the documentation available for offline use.\nTo test the PDF generation do:\n./container_build/runInPupeteerDocker.sh PDF   Updating the Docsy theme The Docsy    theme is pulled in as a Go module. To update the version of Docsy used see Update the Docsy Hugo Module    .\nWhen these instructions say to run the hugo command you need to run them using the builder container, unless you have Hugo and Go installed locally. e.g.\n./container_build/runInHugoDocker.sh \"hugo mod get -u github.com/google/docsy@v0.2.0\"   ","categories":"","description":"How to develop and build the documentation.\n","excerpt":"How to develop and build the documentation.\n","ref":"/community/documentation/building/","tags":"","title":"Building the Documentation"},{"body":"","categories":"","description":"As yet unreleased key features and changes.\n","excerpt":"As yet unreleased key features and changes.\n","ref":"/news/releases/unreleased/","tags":"","title":"Unreleased"},{"body":"Breaking changes When making changes to the Schema be mindful of the impact of those changes on XML documents that were valid against the previous version of the Schema. See Release considerations.\nNaming conventions All elements, attributes and types should be named in UpperCamelCase, e.g. EventSource, GroupComplextType, etc.\nAny initialisms that form part of a name can be in all capitals, e.g. MAC in DeviceMACAddressSimpleType.\nGroups Groups should be suffixed with Group, e.g. InstallationGroup.\nSimple types Simple types should be suffixed with SimpleType, e.g. LatitudeSimpleType.\nComplex types Complex types should be suffixed with ComplexType, e.g. PrintComplexType.\nElements vs attributes Elements are preferred.\nCardinality Mandatory elements and attributes should be used with caution. In addition to the fact that adding a new mandatory element/attribute means a breaking change it also imposes a requirement for an event to have the data to populate that element/attribute. The Schema has to support events coming from a wide variety of source systems which may only supply minimal information and whose log output is not capable of being changed. For this reason the vast majority of elements are optional to not impose requirements that cannot be met by source system’s data.\nSimilarly use of constraints should be avoided as these would impose unreasonable restrictions.\nUse of anonymous complex types When adding child content the use of \u003cxs:complexType\u003e elements should be avoided as this causes problems for the auto generated Java code produced for the event-logging Java library. Instead create a new named complex type which will ensure the type is mapped to a Java class for a cleaner Java API    .\nOrder Top level schema items When adding new top level elements, e.g. a root element or a complex type, they should be added in alphabetical order and following the following grouping and order of groups:\n Root elements Groups Complex types Simple types  Sequences Elements in a sequence are in no particular order. They should however be ordered in a logical manor with the most frequently used elements first. If the sequence includes a Data element of type evt:DataComplexType then this should be the last element and be optional as it is used for extensibility.\nAnnotations The Schema should be self-documented as far as possible with \u003cxs:annotation\u003e elements added to all elements, attributes and types to describe their purpose. These annotations are pulled through into the Javadoc of the event-logging Java library so the more information that can be provided, the better the Java API    will be.\nData elements Data elements of type evt:DataComplexType should be included in most places in the Schema to allow for extensibility of all aspects of the Schema.\n","categories":"","description":"A style guide for developers contributing to the design of the schema.\n","excerpt":"A style guide for developers contributing to the design of the schema. …","ref":"/community/dev-guide/schema-style-guide/","tags":["style"],"title":"Schema Style Guide"},{"body":"The following table provides a number of examples of how some common event types can be modelled.\n   Event Description Schema Action within \u003cEventDetail\u003e and Additional Elements Notes     User fails to log onto a workstation due to incorrect password. \u003cAuthenticate\u003e with \u003cOutcome\u003e subelements \u003cSuccess\u003e set to false and \u003cReason\u003e set to an appropriate value, e.g. IncorrectUsernameOrPassword.    Network file server reports that a user has authenticated by presenting kerberos token. \u003cAuthenticate\u003e    Network file server checks that the authenticated user has permission to access a specific folder This is considered internal system behaviour; nothing has changed as a result of the action. Therefore this is not modelled within the schema. If there is a requirement to record these events, then \u003cUnknown\u003e should be used.   Network file server reports that a user has failed to access a file within a specific folder due to insufficient privilege. \u003cView\u003e of type \u003cFile\u003e with \u003cPermitted\u003e element of \u003cOutcome\u003e set to false, and \u003cDescription\u003e element assigned to a suitable string literal.    User writes an email and preses the send button. \u003cSend\u003e of type \u003cEmail\u003e.    Device control agent permits user to read a file from USB drive. \u003cImport\u003e of type \u003cFile\u003e. An additional event might be created in order to describe the operation requested by the user/enacted by the OS, e.g. \u003cCopy\u003e   Device control agent permits user to write a file to USB drive. \u003cExport\u003e of type \u003cFile\u003e. An additional event might be created in order to describe the operation requested by the user/enacted by the OS, e.g. \u003cCopy\u003e   Firewall prevents a device talking to network by dropping ICMP Ping request. \u003cNetwork\u003e with sub-element \u003cDeny\u003e. It is presumed that this is a routine and fully automatic activity. If this was not the case then \u003cAlert\u003e might be more appropriate.   Host based, software firewall allows a process to listen on a port. \u003cNetwork\u003e with sub-element \u003cListen\u003e    User enters a building using an access badge. \u003cAuthenticate\u003e There will be a new schema action for physical access / physical presence events in a future version of the schema   User attempts to badge into a building but is denied as they are not a member of the necessary group. \u003cAuthenticate\u003e There will be a new schema action for physical access / physical presence events in a future version of the schema   User saves a draft email. \u003cCreate\u003e of type \u003cEmail\u003e    User clicks on “Export results to XLS” within an application. \u003cExport\u003e of type \u003cFile\u003e This is an \u003cExport\u003e as it relates to information being transferred out of a controlled area (the application).   User clicks on “Print to PDF” within an application. \u003cExport\u003e of type \u003cFile\u003e N.B. not \u003cPrint\u003e, as it doesn’t relate to creating hard-copy, but it is an \u003cExport\u003e as it relates to information being transferred out of a controlled area (the application).   Web proxy allows an authenticated user access to a website of known category. \u003cView\u003e of type \u003cResource\u003e that has \u003cCategory\u003e element assigned to that reported by the web proxy Events are modelled from the point of view of the user, where possible.   Someone plugs a USB drive into a workstation while a user session is logged in. \u003cInstall\u003e of type \u003cMedia\u003e. \u003cUser\u003e is the user currently logged into the workstation.    Someone unplugs a USB drive into a workstation while a user session is not logged in. \u003cUninstall\u003e of type \u003cMedia\u003e. There is no \u003cUser\u003e element.    Antivirus product on a workstation with a logged in user detects malware on a file. \u003cAntiMalware\u003e with sub-element \u003cQuarantine\u003e This will be modelled as \u003cAlert\u003e in a future version of schema.   An IPS appliance blocks an IP address that may be attempting an SQL injection attack. \u003cAlert\u003e with sub-element \u003cIDS\u003e. Attacker IP is recorded in \u003cSource\u003e and target in \u003cDestination\u003e. (IPS - Intrusion Prevention System, IDS - Intrusion Detection System)   A database reports that a processing account logs on and performs a backup. \u003cAuthenticate\u003e and then a second event, ideally \u003cProcess\u003e if the backup is contained within the database and control maintained, otherwise \u003cExport\u003e. It might be unclear that this is a backup operation, e.g. perhaps a query is performed. In this case \u003cCriteria\u003e could be used as the \u003cSource\u003e of the \u003cExport\u003e.   User sends a document to the print queue for immediate printing. \u003cPrint\u003e with \u003cAction\u003e set to CreateJob Q: Why not StartPrint? A: Although user intends this to be printed immediately, it might actually be delayed or never actually be printed, e.g. due to an error.   Print server or network printer reports that it has started printing a document. \u003cPrint\u003e with \u003cAction\u003e set to StartPrint.    Administrator creates a new user. \u003cCreate\u003e of type \u003cUser\u003e    Administrator creates a new role for power-users. \u003cCreate\u003e of type \u003cGroup\u003e    Administrator assigns a user to the power-users role. \u003cAuthorise\u003e of type \u003cUser\u003e with \u003cAddGroups\u003e element assigned appropriately.    A user downloads an executable program from a website (reported by web proxy). \u003cView\u003e of type \u003cResource\u003e with \u003cMimeType\u003e assigned appropriately. It is not possible for the web proxy to accurately infer what a client did with the accessed resource. Of course, analytics are likely to use the MIME type information in conjunction with other events to identify potential issues.   User defines a new product line within the stock control system. \u003cCreate\u003e of type \u003cObject\u003e with \u003cType\u003e element assigned to an appropriate string literal, e.g. “Product Line”    User opens a file from a network share using MSWord.exe. \u003cView\u003e of type \u003cFile\u003e A future update to the schema will allow \u003cEventSource\u003e to record details of the opening application. Currently, this must be recorded within \u003cData\u003e elements of \u003cEventSource\u003e   User deletes a file from a network share using the UNIX command line. \u003cDelete\u003e of type \u003cFile\u003e    DHCP service leases an IP address to a device with a certain MAC address. \u003cNetworK\u003e of type \u003cBind\u003e. Subelements of \u003cBind\u003e define the MAC address of the device within \u003cSource\u003e and the assigned IP address within \u003cDestination\u003e    User initiates an antivirus scan. \u003cAntiMalware\u003e of type \u003cStartScan\u003e. This will be modelled as \u003cProcess\u003e in a future version of the schema.   RADIUS server allows an 802.1x authenticated device onto the network. \u003cAuthenticate\u003e with the \u003cClient\u003e subelement of \u003cEventSource\u003e assigned to the authenticated device.    User searches for documents containing a particular term using enterprise search tool. \u003cSearch\u003e with the term specified within \u003cQuery\u003e subelement, one of \u003cSimple\u003e, \u003cAdvanced\u003e or \u003cRaw\u003e    User creates a contact in a messaging application. \u003cCreate\u003e of type \u003cObject\u003e with \u003cType\u003e element assigned to an appropriate string literal, e.g. “Contact”    User creates a status message in a social media application. \u003cCreate\u003e of type \u003cGroupChat\u003e with \u003cType\u003e element assigned to an appropriate string literal, e.g. “Status” This assumes that other users can comment of the status message and it is therefore a converational medium, and illustrates how analogy can be used to find the most appropriate way to model events.   User likes another user’s status message in social media application. \u003cCreate\u003e of type \u003cResource\u003e with \u003cType\u003e element assigned to an appropriate string literal, e.g. “Like”. \u003cURL\u003e can be used to indicate the actual status message and \u003cUser\u003e subelement of \u003cPermissions\u003e can reflect the user who created the status update message. A future version of the schema will allow all Object types to refer to other instances of Object type. In this way the actual Status message can be included within this event, rather than only indirectly by URL.   User deletes a record via the web interface to a database application. \u003cDelete\u003e of type \u003cObject\u003e with \u003cType\u003e element assigned to a string literal that describes the type of record deleted. Where a generic database tool has been used, then \u003cType\u003e can be assigned to a generic value such as Record and \u003cDescription\u003e assigned to a value that indicates the name of the table (i.e. a rough idea of the type of record). N.B. \u003cName\u003e should be used only to record information relating to the specific instance, if neeeded (e.g. record number).   Email server receives an email from an external party. \u003cReceive\u003e of type \u003cEmail\u003e     ","categories":"","description":"In order for the benefits of event normalisation to be realised, it is necessary for similar events to be represented consistently within the schema.\n","excerpt":"In order for the benefits of event normalisation to be realised, it is …","ref":"/docs/event-modelling/","tags":"","title":"Event Modelling"},{"body":"The Docsy theme supports site versioning so that multiple versions of the site/documentation can exist and link between each other. For this documentation site, each version of the site is tied to a minor release of the Schema, e.g. 4.0, 4.1, 4.2, 5.0 etc. Each Schema version is represented by a git branch with the same name (without the v prefix). Documentation changes for an as yet unreleased Stroom version would be performed on the master branch.\nWhen the combined site is built, each version will exist within a directory as siblings of each other, i.e.\n/4.0/ /4.1/ /4.2/ /5.0/ The master branch is NOT published to GitHub Pages or included in the release artefacts.\nVersioned Site Configuration To configure each version of the site so that it knows what version it is and what the other versions are you need to edit config.toml. This needs to be done on each branch in a way that is appropriate to each branch. If a change needs to be applied to all branches then it is best to make it in the oldest branch for which the documentation is published and then merged the changes up the chain, e.g. legacy =\u003e 4.0 =\u003e 4.1 =\u003e 4.2 =\u003e 5.0 =\u003e master.\nThe following config properties needed to be amended on each branch. This example is from the 4.1 branch and is based on there being versions 4.0 and 4.1, with 4.1 being the latest.\n4.1  [params]  # Menu title if your navigation bar has a versions selector  # to access old versions of your site.  version_menu = \"Schema 4.1\"   # If true, displays a banner on each page warning that  # it is an old version. Set this to true on each git branch  # of stroom-docs that is not the latest release branch  archived_version = false   # Used in the banner on each archived page.  # Must match the value in brackets in \"version_menu\" above  version = \"4.1\"   # A link to latest version of the docs. Used in the  # \"version-banner\" partial to point people to the main  # doc site.  url_latest_version = \"/../4.1\"   # The name of the Github branch that this version of the  # documentation lives on. Used for the Github links in the  # top of the right hand sidebar. Should match the last part  # of url_latest_version.  github_branch = \"4.1\"   # A set of all the versions that are available.  [[params.versions]]  version = \"4.1\"  url = \"/../4.1\"  [[params.versions]]  version = \"4.0\"  url = \"/../4.0\"    4.0  [params]  # Menu title if your navigation bar has a versions selector  # to access old versions of your site.  version_menu = \"Schema 4.0\"   # If true, displays a banner on each page warning that  # it is an old version. Set this to true on each git branch  # of stroom-docs that is not the latest release branch  archived_version = true   # Used in the banner on each archived page.  # Must match the value in brackets in \"version_menu\" above  version = \"4.0\"   # A link to latest version of the docs. Used in the  # \"version-banner\" partial to point people to the main  # doc site.  url_latest_version = \"/../4.1\"   # The name of the GitHub branch that this version of the  # documentation lives on. Used for the GitHub links in the  # top of the right hand sidebar. Should match the last part  # of url_latest_version.  github_branch = \"4.0\"   # A set of all the versions that are available.  [[params.versions]]  version = \"4.1\"  url = \"/../4.1\"  [[params.versions]]  version = \"4.0\"  url = \"/../4.0\"     In the same example scenario as above, the config.toml file for the 4.0 branch (which is not the latest version in this case) would be:\nAutomated build process The site is built by GitHub Actions on a nightly basis. This schedule is controlled by build_and_release.yml    on the master branch.\nThis automated build will look for any branches matching the pattern (legacy|[0-9]+\\.[0-9]+) and for each one will do the following:\n Checkout that branch Build the site for that version using Hugo  Add the site files to a combined site Generate the documentation PDF   Build the site with no other versions configured  Create a zip of the single version site    Once each site has been processed it will:\n Create a single zip file containing the combined site Tag the release with a version number Add the following release artefacts:  Single version site zips Combined site zip Single version PDFs   Create a root index.hml file that will redirect to the latest version sub-directory. Publish the combined site to GitHub Pages https://gchq.github.io/stroom-docs    .  Although the build is run on the master branch it will use the HEAD commit of each of the release branches to build the site(s).\nThe build and release can be forced by adding the text [publish] to the commit message on master. This is useful in testing, or if updated documentation is needed for any reason.\nWhere to make changes The nature of a change to the site/documentation will determine which git branch the change is made on.\nChanges specific to a Stroom version Any changes that are specific to a Stroom version, e.g. documenting a new feature in that version should be made on the oldest branch that contains that feature. If the change relates to an as yet unreleased version of Stroom then make the change on master.\nChanges to the News/Releases Adding news items or release notes for new versions should be done on the latest release branch. The News/Releases section is not included in old versions when released.\nChanging the site look Ideally changes to the look of the site, e.g. upgrading the Docsy theme sub-module to a new commit, adding shortcodes or tweaking the CSS should be done on all branches so when switching between branches the look doesn’t change. This means this sort of change should be done on the oldest published version branch and then merged up the chain to the others, e.g. 4.0 =\u003e 4.1 =\u003e master.\nIn some cases a change to the look may require significant refactoring of the content, e.g. changes to a shortcode. In the event of this it may be necessary to only make the change on the latest release branch and for different versions to have a slightly different look. The decision on how best to tackle these situations will have to be on a case by case basis.\nBuilding a mock multi-version site To make it easier to test how the combined site will look with multiple versions the following script can be run to mock up a multi-version site. It does the following:\n Copies the content of the local repository. Amends the config file to set appropriate versions. Builds the site for that version. Copies the built site into a sub-directory matching the version in /tmp/stroom-docs_mock_combined_site/.  To run this script do:\ncreate_mock_combined_site.sh The combined site can be served using something like the Python simple HTTP server, e.g.\ncd /tmp/stroom-docs_mock_combined_site python -m SimpleHTTPServer 8888 Then open a browser at localhost:8888    .\nAs each version of the site is a copy of the same thing the content will be all the same but it allows you to test the version drop down and archived banner.\n","categories":"","description":"How to manage documentation for different versions of the Schema.\n","excerpt":"How to manage documentation for different versions of the Schema.\n","ref":"/community/documentation/versions/","tags":"","title":"Schema Versions"},{"body":"","categories":"","description":"This section is intended for developers contributing to the development of the Schema design. It describes how to do some common tasks, such as releasing and building documentation.\n","excerpt":"This section is intended for developers contributing to the …","ref":"/community/dev-guide/","tags":"","title":"Developer Guide"},{"body":" Applicable Schema version: “4.0”\nDocumentation generated on: 16 May 2022, 15:45 UTC\nDocumentation release version: SNAPSHOT\nTo see the documentation for other versions of the schema click the version drop-down at the top of the screen.\n ","categories":"","description":"Documentation on how to use the _event-logging_ XML Schema.\n","excerpt":"Documentation on how to use the _event-logging_ XML Schema.\n","ref":"/docs/","tags":"","title":"Documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/news/news/","tags":"","title":"News About Stroom"},{"body":"","categories":"","description":"","excerpt":"","ref":"/news/releases/","tags":"","title":"New Releases"},{"body":"Overview This documentation shares the same style guidelines as the Stroom documenation    so refer to that for guidance on how to style this documentation.\n","categories":"","description":"A guide on the house style, structure and content for this site.\n","excerpt":"A guide on the house style, structure and content for this site.\n","ref":"/community/documentation/style-guide/","tags":["style"],"title":"Documentation Style Guide"},{"body":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v3.0.0.xsd\"  Version=\"3.0.0\"\u003e  \u003cEvent\u003e  ...  \u003c/Event\u003e  \u003cEvent\u003e  ...  \u003c/Event\u003e  ... \u003c/Events\u003e The \u003cEvents\u003e root element contains zero-to-many \u003cEvent\u003e elements to describe each event in the set. Events can either be sent individually or in batches.\nDescribing an Event As discussed in the Introduction every event must describe when it happened, who was responsible, where it happened and what happened.\nThe schema is intentionally very permissive with the majority of elements being optional. The reason for this is that not all systems will be able to provide the same breadth of event data and a partially populated event is preferable to no event. Enforcement of mandatory data items can be done outside of the schema.\nIn the various examples that follow some elements that appear in the example may be optional and are only shown as guidance.\nDescribing When? To describe when an event happened a timestamp must be present on every event, see the following example.\n\u003cEventTime\u003e  \u003cTimeCreated\u003e2013-03-11T17:34:14.623Z\u003c/TimeCreated\u003e \u003c/EventTime\u003e The date and time must be in the format described in Data Types.\nDescribing The Source of the Event? Each event must describe who or what is responsible for the event occurring.\nThe \u003cEventSource\u003e element describes the event source, e.g. System, Environment, Generator, User, Client, Device, etc. See the following example.\n\u003cEventSource\u003e  \u003cEventId\u003e7483983873\u003c/EventId\u003e  \u003cSessionId\u003enode0j4ii2zxu01i91g5f8odup78c30\u003c/SessionId\u003e  \u003cSystem\u003e  \u003cName\u003eSome System\u003c/Name\u003e  \u003cEnvironment\u003eOperational\u003c/Environment\u003e  \u003cOrganisation\u003eSome Org\u003c/Organisation\u003e  \u003cTags\u003e  \u003cTag\u003ecritical-system\u003c/Tag\u003e  \u003c/Tags\u003e  \u003c/System\u003e  \u003cGenerator\u003eSome-Event-Log-Provider\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003esomeserver.someorg.org\u003c/HostName\u003e  \u003cIPAddress\u003e123.123.123.123\u003c/IPAddress\u003e  \u003cLocation\u003e  \u003cCountry\u003eUK\u003c/Country\u003e  \u003cSite\u003eBig Campus\u003c/Site\u003e  \u003cTimeZoneName\u003eEurope/London\u003c/TimeZoneName\u003e  \u003c/Location\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cIPAddress\u003e121.121.121.121\u003c/IPAddress\u003e  \u003cLocation\u003e  \u003cCountry\u003eFR\u003c/Country\u003e  \u003cSite\u003eSmall Campus\u003c/Site\u003e  \u003cRoom\u003eA1a\u003c/Room\u003e  \u003cAisle\u003eA1\u003c/Aisle\u003e  \u003cDesk\u003e1\u003c/Desk\u003e  \u003cTimeZoneName\u003eEurope/Paris\u003c/TimeZoneName\u003e  \u003c/Location\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003cUserDetails\u003e  \u003cOrganisation\u003eSome Org\u003c/Organisation\u003e  \u003c/UserDetails\u003e  \u003c/User\u003e \u003c/EventSource\u003e Identifying events The system generating the event can label each event with a unique identifer that allows multiple events to be associated together (see \u003cEventChain\u003e below). Such an identifier need only be unique within the events generated by that system, or globally unique (e.g. a UUID). The identifier is recorded in the \u003cEventId\u003e element.\nSessions Sometimes events occur as part of a session, for example a user’s session in a web application or some other grouping concept such as low level system events that take place in the same thread. To make it possible for the system receiving the events to group multiple events that are part of the same session, the \u003cEvent\u003e/\u003cEventSource\u003e/\u003cSessionId\u003e element can be used. Each event would set this element with the current session or thread ID. The session ID may only be unique within the source system but it can be used in conjunction with the system name to group events.\nAn example of this can be seen in the search event here.\nSystem The \u003cSystem\u003e structure provides information about the name of the system that created the event, the deployment environment and the organisation that owns it. It is also possible to provide a description and classification of the system.\nGenerator The generator is an application, service or specific component that created the event, such as ‘Microsoft-Accounting-Service’ or ‘Apache-HTTPD’. Event type ids (see Type ID) are unique to a particular event generator so a generator name must be included.\nDevices Devices elements, including the generator, client and server devices, provide a means of recording sufficient details about the devices involved in the generation of the event. The structure allows for the recording of the identity of the device as well as its location physically and on the network.\nPhysical Access (Doors) Where entry/exit to buildings/rooms is managed by a physical access control system this element can be used to record events at the door. Some form of authentication and authorisation will be required in order for the user to pass through the door, so the outcome of that authorisation can be recorded including failure conditions.\nFor every door event the door authentication device is the event source. A description of the door may be added to the \u003cEventSource\u003e element that is specific to the door authentication device used, see the following example.\n\u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eSome System\u003c/Name\u003e  \u003cEnvironment\u003eOperational\u003c/Environment\u003e  \u003cOrganisation\u003eSome Org\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eDoor Software\u003c/Generator\u003e  \u003cDoor\u003e  \u003cName\u003eMain Entrance Door\u003c/Name\u003e  \u003cSingleEntry\u003etrue\u003c/SingleEntry\u003e  \u003cOneWay\u003etrue\u003c/OneWay\u003e  \u003c/Door\u003e  \u003cUser\u003e  \u003cId\u003ejbloggs\u003c/Id\u003e  \u003c/User\u003e \u003c/EventSource\u003e The elements \u003cSingleEntry\u003e and \u003cOneWay\u003e determine the access control characteristics of the door.\nSome doors only allow entry/exit from the side that the authentication device exists on to the other side (one way), and only allow one person to enter/exit at a time (single entry).\nSliding doors or hinged doors potentially allow users to pass in either direction (not one way) and also allow for multiple users to pass through despite only a single authorisation (not single entry).\nThe identity of the user may be resolved from the pass/access device used to a user id.\nThe following door events may be recorded:\n Entry – User has authenticated and entered through door. Exit – User has authenticated and exited through door. Reset – Reset of door entry system to allow passes to be used in either direction. None – User has authenticated but not entered or exited.  Describing Where? A device or door typically has some form of physical location. The location can include details such as the country, site, building, room and desk/rack. It can also include details of the timezone of that physical location.\nUser When sharing data within large global organisations it is important that an individual (who may have access to multiple systems across multiple parts of that organisation) can be identified. Individuals may have multiple identities within each part of the organisation due to the scope, purpose and limitations of individual systems. Examples of these many forms of identity range from door access card numbers, email addresses, user names, certificates and user IDs.\nMany of these forms of identity may not be unique across all parts of an organisation so it is important to resolve this to an identifier that is unique across the organisation. For example the door systems for each building may be independent and have their own ID scheme. Therefore this local ID should be replaced with a globally unique identifer, keeping the local identifier in a Data element.\nIn addition to this, user details can be provided to describe which part of the organisation the user works in, e.g. country/group/unit.\nMany events may be triggered by a device and not involve a specific user. In these cases it is only necessary to describe the device that the event occurred on.\nRun As Some events may be executed by a user assuming the identity of another user, e.g. use of sudo. Where this is the case it is mandatory to describe the user that the event is being executed as using the \u003cRunAs\u003e element.\nThe \u003cRunAs\u003e element may also be used when an event is executed by the device on behalf of a user. This can often be the case when executing scheduled tasks, e.g. overnight database clean up jobs.\nAs with the \u003cUser\u003e element the \u003cRunAs\u003e element must contain a unique user identifier.\nInteractive For some events the user may not have been present at the time the event occurred. This can be the case for scheduled tasks or tasks that are executed from a queue, e.g. asynchronous processing. In these cases it is necessary to indicate that the event was not interactive, i.e. not triggered by a user directly. This is done using the \u003cInteractive\u003e element.\nData For any event source data that cannot be described using the defined structure, \u003cData\u003e elements can be used, though care should be taken to use these elements in a consistent way to allow for future processing and inspection of events. Describing What Happened? Each event will describe what happened within the \u003cEventDetail\u003e element. The content of the \u003cEventDetail\u003e element will be specific to the type of event that occurred, e.g. a logon event would contain information about the type of logon, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eInteractiveLogon\u003c/TypeId\u003e  \u003cDescription\u003eA user has logged on.\u003c/Description\u003e  \u003cAuthentication\u003e  \u003cAction\u003eLogon\u003c/Action\u003e  \u003cLogonType\u003eInteractive\u003c/LogonType\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Authentication\u003e \u003c/EventDetail\u003e Description The \u003cDescription\u003e element allows for the inclusion of a human readable description of the event type.\nType ID The \u003cEventDetail\u003e element includes a mandatory TypeId element. This element identifies the unique event type as known to the generator. For example a generator may distinguish 2 types of logon event just by some id. Use of this element would be the only way to treat the two types differently. In the case of application logging the Type ID should be unique to a use case within the system, e.g. CreateDocument, DeleteRecord, DocumentSearch, UserSearch, etc.\nThe form of the Type IDs is specific to the generator and could be strings or numeric codes, as long as they provide a unique identifier for that type of event within that generator. Where a generator already produces some form of ID for its events, e.g. Microsoft system event codes these can be used directly, however in the absence of predefined code a human readable TypeId is preferable as it is more easily understood by human.\nHaving sensible Type IDs is of particular benefit when developing processes that depend upon events conforming to the schema as it allows the developer to group events by the Type ID or to have conditional processing based on the ID.\nClassification The \u003cClassification\u003e element can be used to describe the classification, protective marking or sensitivity of the data in the event. For example the data may be commercially sensitive or contain sensitive personal data. The element includes a number of optional elements so can be as simple as just a free text \u003cText\u003e element containing something like COMMERICAL IN CONFIDENCE to multiple elements that described the protective marking in complex classification scheme.\nThe \u003cClassification\u003e element appears in a number of places in the schema as it can be used to describe the sensitivity or marking of different entities/objects. For example it can be used to describe the sensitivity of a set of audit events in aggregation, the content of a single audit event or an object that is the subject of an audit event, i.e. a document being viewed by a user.\nThe following are some examples of populated Classification elements:\n\u003cClassification\u003e  \u003cText\u003eCOMMERICAL IN CONFIDENCE\u003c/Text\u003e  \u003cClassification\u003eCOMMERICAL IN CONFIDENCE\u003c/Classification\u003e \u003c/Classification\u003e \u003cClassification\u003e  \u003cText\u003eCONFIDENTIAL\u003c/Text\u003e  \u003cOriginator\u003e  \u003cCountry\u003eGBR\u003c/Country\u003e  \u003cOrganisation\u003eUK Headquarters\u003c/Organisation\u003e  \u003c/Originator\u003e  \u003cCustodian\u003e  \u003cCountry\u003eGBR\u003c/Country\u003e  \u003cOrganisation\u003eGroup Headquarters\u003c/Organisation\u003e  \u003c/Custodian\u003e  \u003cClassification\u003eCONFIDENTIAL\u003c/Classification\u003e  \u003cDescriptors\u003e  \u003cDescriptor\u003ePERSONAL\u003c/Descriptor\u003e  \u003c/Descriptors\u003e  \u003cOrGroups\u003e  \u003cAccessControlGroup\u003eHuman Resources\u003c/AccessControlGroup\u003e  \u003cAccessControlGroup\u003eManagers\u003c/AccessControlGroup\u003e  \u003cAccessControlGroup\u003eAuditors\u003c/AccessControlGroup\u003e  \u003c/OrGroups\u003e  \u003cPermittedNationalities\u003e  \u003cNationality\u003eGBR\u003c/Nationality\u003e  \u003cNationality\u003eUSA\u003c/Nationality\u003e  \u003c/PermittedNationalities\u003e  \u003cPermittedOrganisations\u003e  \u003cPermittedOrganisation\u003eUK Headquarters\u003c/PermittedOrganisation\u003e  \u003cPermittedOrganisation\u003eGroup Headquarters\u003c/PermittedOrganisation\u003e  \u003c/PermittedOrganisations\u003e  \u003cDisseminationControls\u003e  \u003cDisseminationControl\u003eORIGINATOR_CONTROLLED\u003c/DisseminationControl\u003e  \u003c/DisseminationControls\u003e  \u003cDisposition\u003e  \u003cDate\u003e2020-03-11T00:00:00.000Z\u003c/Date\u003e  \u003cProcess\u003eDELETE\u003c/Process\u003e  \u003c/Disposition\u003e \u003c/Classification\u003e Purpose Certain auditable events may require users to provide justification for the action they are taking, e.g. viewing a personnel record or processing a high value payment. This element provides the means to record the justification/purpose of the auditable event and possibly any authorisations that were obtained.\nSchema Action The action specific detail of the auditable event is recorded in a ‘schema action’ element, where the structure of each element is tailored to the auditable action.\nThe schema action element structures are defined in more detail in Schema Actions.\nEvent Chain Sometimes events occur that are directly related to another event, for example when an asynchronous search is initiated by a user and at some later point they view the search results. The second event can be considered a child of the first. Event relationships like this can be recorded using the \u003cEvent\u003e/\u003cEventChain\u003e element. Linking events relies on the source system uniquely identifying (within the scope of the source system) each event and recording this unique ID in the \u003cEvent\u003e/\u003cEventSource\u003e/\u003cEventId\u003e element.\nIf you had an event with ID 3 that was a child of an event with ID 2 that in turn was a child of an event with ID 1 you would model it as follows:\nEvent 1 (grandparent)\n\u003cEventSource\u003e  \u003cEventId\u003e1\u003c/EventId\u003e \u003c/EventSource\u003e Event 2 (parent)\n\u003cEventSource\u003e  \u003cEventId\u003e2\u003c/EventId\u003e \u003c/EventSource\u003e \u003c!-- ... --\u003e \u003cEventChain\u003e  \u003cActivity\u003e  \u003cId\u003e1\u003c/Id\u003e  \u003cName\u003eGrandparent event\u003c/Name\u003e  \u003c/Activity\u003e \u003c/EventChain\u003e Event 3 (child)\n\u003cEventSource\u003e  \u003cEventId\u003e3\u003c/EventId\u003e \u003c/EventSource\u003e \u003c!-- ... --\u003e \u003cEventChain\u003e  \u003cActivity\u003e  \u003cId\u003e2\u003c/Id\u003e  \u003cName\u003eGrandparent event\u003c/Name\u003e  \u003cParent\u003e  \u003cId\u003e1\u003c/Id\u003e  \u003cName\u003eParent event\u003c/Name\u003e  \u003c/Parent\u003e  \u003c/Activity\u003e \u003c/EventChain\u003e This structure can also be used to model multiple child events that have the same partent event. Where multiple events are related by some form of session (e.g. a session in a web application) and there is no concept of a parent event then the \u003cEvent\u003e\u003cEventSource\u003e\u003cSessionId\u003e element should be used to group the events together.\nAn example of this can be seen in the search event here.\nSchema Versions It is anticipated that the schema will evole over time to accomodate new types of auditable event and to better describe existing events. Each version of the schema is marked with a unique version number using the version attribute in the \u003cxs:schema\u003e element. All events should be marked with the version of the schema that they are based upon using the Version attribute of the \u003cEvents\u003e element. This allows systems processing the events to correctly interpret the structure.\nSchema Versioning The Event Logging Scheme uses the semantic versioning scheme. The version attribute value takes the form x.y.z where\n x = Major version y = Minor version z = Patch version  A change to the major version will include ‘breaking changes’ that are not backwards compatible with previous versions of the schema.\nA change to the minor version will include new structural elements but will be non-breaking and backwards compatible with previous versions of the schame at that major version.\nA change to the patch version means very minor non-breaking changes such as additions to enumerated types or annotation changes.\nIdeally all new data should conform to the latest version of the schema to reduce the length of time legacy versions have to be supported for.\nManaging Multiple Schema Versions Systems receiving/processing data conforming to the Event Logging Schema should expect to receive data conforming to multiple historic versions of the schema as it takes time for client systems to update to the latest version.\nTo resolve the issue of having to process and store multiple versions of the schema, a schema uplift process can be used. This involves having a number of XSLT transformation steps to translate from each iteration of the schema to the next. For example if v1.2 of the schema has an element called \u003cDetail\u003e and this has been renamed ot \u003cEventDetail\u003e in v2.0 then the XSLT can rename the elements in the event data to bring the event record up to v2.0. The same uplift operation can be applied to historic events that have already been stored and have become out of date, or they can be uplifted on demand.\nTaking this approach will reduce the number of different versions that have to be stored/processed.\n","categories":"","description":"Every XML instance that conforms to the schema must have a root element named `\u003cEvents\u003e` and reference the schema, see the following example.\n","excerpt":"Every XML instance that conforms to the schema must have a root …","ref":"/docs/basic-structure/","tags":"","title":"Basic Structure"},{"body":"Release considerations Before releasing a new version of the schema you need to consider the impact of the changes in the new release. A change to the schema can make documents that were valid against the current version no longer valid when validated with the new version. This would be classed as a breaking change.\nA non-exhaustive list of examples of changes that are considered breaking with respect to XML documents being validated against the schema:\n New mandatory xs:element or xs:attribute Removal of an existing xs:element or xs:attribute Removal of an existing xs:choice item Changing an existing xs:element to be mandatory Changing the position of an element within an xs:sequence Changing the position of an attribute within an xs:element Renaming an xs:element or xs:attribute Change to an element/attribute’s enumeration/pattern that would invalidate formally valid values  An indirect breaking change also occurs when the schema is changed in a way that results in a breaking change to the event-logging    Java library. The event-logging Java library consists of Java code that is auto-generated from the schema. If for example a complex type in the schema is renamed then this would result in a Java class being renamed and this would be a breaking change for any client systems that use the library.\nA non-exhaustive list of examples of changes that are considered breaking with respect to the event-logging Java library are:\n All changes listed above that are breaking for an XML document Renaming a complex type Renaming a simple type  Version number The changes made to the schema will dictate the version number. The event-logging schema follows Semantic Versioning    , i.e. MAJOR.MINOR.PATCH. A MAJOR change is one that is breaking in terms of XML documents that validate with the schema, e.g. the removal of an element. A MINOR change is a non-breaking structural change, e.g. the addition of an optional element. A PATCH change is a very minor non-structural change, e.g. adding/updating an element’s annotation.\nA change that would break the event-logging Java library but not XML documents, e.g. the rename of a complex type, does not require a change to the MAJOR version part. In this instance the event-logging library would be released with its version indicating a MAJOR change.\nThe version number should be of one of these forms\n v\u003cMAJOR\u003e.\u003cMINOR\u003e.\u003cPATCH\u003e - e.g. v4.1.2 v\u003cMAJOR\u003e.\u003cMINOR\u003e-beta.NN - e.g. v4.2-beta.1  Beta versions can be used when you need to release a version to trial new changes. With a beta version it is accepted that each iteration of the MAJOR.MINOR beta may be breaking with respect to previous iterations of that beta, e.g. one beta iteration adds a new element then a subsequent iteration removes it.\nNamespace version Strictly speaking the namespace version in the schema (e.g. event-logging:3) should be changed for each MAJOR version change, however changing the namespace currently causes significant pain within Stroom so for now the namespace version will stay at 3 and be out of step with the MAJOR version.\nDocumentation Any changes to the schema should be fully documented. This includes documentation in the schema in the form of element annotations and changes/additions to the documentation site in ./docs. All of the documentation source files should be applicable to one minor version of the schema, so any additions/changes/removals to the schema should be reflected in the documentation.\nThe annotations in the schema are used to generate Javadoc in the event-logging Java library so it is key that they are as thorough as possible.\nRelease branches To allow us to support multiple versions of the schema there will be a git branch for each minor release, e.g. 4.0, 4.1, 5.0, etc. Due to the way that the documentation is tied to release branch names all releases of the schema MUST be released from the appropriate release branch, e.g. tag/version v4.1.2 from branch 4.1.\nRelease Steps  Decide what the new version number will be based on the changes made, see Version number above. Ensure all required changes have been made to event-logging.xsd with any new elements suitably annotated.  Change the version attribute to the intended version number, e.g. 4.1.2 Change the id attribute to the intended version number, e.g. event-logging-v4.1.2 Change the single enumeration in VersionSimplType to match the new version number.   Ensure all required changes have been made to the documentation. Run the build for a set version number to ensure the CI build will pass, e.g. ./gradlew clean build -Pversion=v4.1.2   When the build runs it will do the following:  Validate the version numbers in the master schema file against the gradle version argument. Run the transformer pipelines to generate the various schema varients (including validating them). Compare the generated schemas with the ones from the latest release so you can check what has changed.   Ensure all changes to the schema have been logged with ./log_change.sh. Add a page to releases section of the documentation for the version being released. Commit and push all the changes. Tag the release using ./tag_release.sh which will initiate the CI release process. Add the new schema to stroom-content  Copy the new schema file into stroom-content/source/event-logging-xml-schema/stroomContent/XML Schemas/event-logging/ naming it something like event-logging v4.1.2.XMLSchema.data.xsd. Copy the latest .XMLSchema.xml files into one named for the new version, e.g. event-logging v4.1.2.XMLSchema.xml Edit this new .XMLSchema.xml file:  Update the \u003cname\u003e tag to reflect the new version number If the major version number has changed update the \u003cnamespaceURI\u003e tag with the new major version number Update the \u003csystemId\u003e tag to reflect the new version number Replace the content of the \u003cuuid\u003e tag with a newly generated UUID. You can use the linux binary uuidgen to generate a new UUID.   Update the CHANGELOG.md file in stroom-content/source/event-logging-xml-schema/, probably copying the content from the CHANGELOG in the event-logging-schema git repo. Run the build to build the new pack Commit and push the changes In GitHUb create a new release for the updated pack.   Update the version numbers in event-logging.xsd  Change the version attribute to the next intended version number with a SNAPSHOT suffix, e.g. 4.2.0-SNAPSHOT Change the id attribute to the next intended version number with a SNAPSHOT suffix, e.g. event-logging-v4.2.0-SNAPSHOT Commit and push the change    ","categories":"","description":"How to release a new version of the schema.\n","excerpt":"How to release a new version of the schema.\n","ref":"/community/dev-guide/release-process/","tags":"","title":"Release Process"},{"body":" For a detailed list of the changes in v4.0-beta.5 see the\nchangelog     v4.0 of the Schema is marked as beta while the changes made since v3 are tested with real event data. We do not anticipate any change to the Schema unless problems are found in testing.\n","categories":"","description":"Key new features and changes present in v4.0-beta.5.\n","excerpt":"Key new features and changes present in v4.0-beta.5.\n","ref":"/news/releases/v04.00-beta.5/","tags":"","title":"Version 4.0-beta.5"},{"body":"The schema has a number of different variants that are all derived from the master event-logging.xsd schema in the root of this repository. The following variants are published as release artefacts:\n   Suffix Description     - The full schema for use by stroom to validate decorated events.   client The client schema for use by client systems and the event-logging Java library for sending un-decorated events. Lacks some \u003cUserDetails\u003e child elements, adds an \u003cEvent\u003e root element to allow clients to send individual events and removes the Event/@Id attribute as this is for use on decorated events only.   safe A version of the schema for validating data from untrusted sources. It limits the number of occurrences of elements and the characters that can be used.    These variants are generated by the java application in event-logging-transformer-main/ which is configured by event-logging-transformer-main/pipelines/configuration.yml.\nThis Java application is run as part of the Gradle build. The generated schemas are output to event-logging-transformer-main/pipelines/generated/\n","categories":"","description":"A guide to the different variants of the schema and the process that creates them.\n","excerpt":"A guide to the different variants of the schema and the process that …","ref":"/community/dev-guide/schema-variants/","tags":"","title":"Schema Variants"},{"body":"Schema action elements are the element in \u003cEventDetail\u003e that describes the action specific detail of the auditable event, e.g. Import, Copy, Authenticate, etc.\nSystem events could be modelled from various points of view, and although it makes little difference in many cases, it is certainly necessary that a decision is made and then applied consistently.\nThe schema is designed to express events in terms of the intent of a user wherever possible. Where there is no user, then the schema expresses events from the point of view of the device/generator creating the event.\nFor example, a log file from a web proxy may contain events that describe events from its point of view. Perhaps that it has not relayed a web page to an authenticated session ID due to a rule violation. In such a case, the correct way to represent the event is as a known user attempting to access a web page and being denied. Which in XML would be as a \u003cView\u003e with \u003cOutcome\u003e elements set appropriately.\nCommon Structural Elements While each schema action has a structure that is specific to the auditable event action, there are a number of structural elements that are common to multiple schema actions.\nMulti Object Complex Type The Multi Object Complex Type is a structure for describing an entity or entities involved in the auditable event, for example a document, file, resource or user. The structure is described in more detail in Object Types.\nThe \u003cUnknown\u003e schema action structure should be the action of last resort, where the auditable action cannot be appropriately described by any of the other schema actions. Heavy use of this structure suggests that the scheme is deficient with respect to a type or types of event and suggestions for how the schema could be improved should be submitted to the developers.\nOutcome The majority of schema action structures include an \u003cOutcome\u003e element. This is used to described whether the action was successful/permitted or not, e.g. a failed logon or a user being denied access to a file.\n\u003cSuccess\u003e is used to describe whether something failed or went wrong in some way, e.g. an export to removable media that failed due to lack of space. This element is used in cases of unexpected failure rather than where something has been prevented due to some rule or process, where \u003cPermitted\u003e would be more appropriate.\n\u003cPermitted\u003e is used to describe whether an action was prevented due to some form of authorisation or rule, e.g. a user not being permitted access to a document due to having insufficient permissions.\nIn both cases a value of true is assumed so the element only needs to be included if the action was unsuccessful.\nThe \u003cDescription\u003e element should be used to described the detail around the failure of the action as this will be useful to a human looking at the event.\nData This provides a flexible structure for describing aspects of the schema action that cannot be described using the structure in the schema. This structure is described in more detail in Unstructured Data\nThe majority of the ‘schema action’ elements include the MultiObjectComplexType structure (or some child of it) to allow for recording various forms of objects that were involved in the event.\nDefined Schema Actions A number of schema actions are defined that aim to be broadly representative of the kinds of activity that are most likely to be of interest from an audit point of view.\n   Schema Action Rough Description     Alert A potentially concerning situation has been identified that requires user attention to resolve.   Approval Events relating to the approval/acceptance/rejection or the request for approval.   Authorise Events relating to authorisation changes, e.g. to group membership within LDAP or AD.   Copy Making copies of entities or data.   Create Creating new items of entities or data.   Delete Destroying entities or data.   Export Moving entities or data out of a controlled area (e.g. database, application or network).   Import Moving entities or data into a controlled area (e.g. database, application or network).   Install Installing hardware, software or removable media.   Move Moving entities or data.   Network Events that relate to networking between computers.   Print Events relating to printing (i.e. making hard-copies).   Process Generic processing events, including starting processes and services on computers.   Receive Obtaining entities or data over the network.   Search Search operations, e.g. querying a database.   Send Transmitting entities or data over the network.   Uninstall Events relating to removal of hardware, software or removable media.   Unknown A type of event that is dissimilar to any in the schema (should only be needed in niche cases).   Update Modification to an entity or data.   View All events relating to accessing an entity or data.    Event Modelling The schema does not aim to provide an exhaustive list of all possible computer operations.\nThis is because:\n It would result in a schema that would be extremely large It would result in a schema that would be constantly changing It would result in a schema that would be very difficult to use  Instead, the schema should be used in such a way to describe the operation using the elements of the schema that most closely capture the nature of the kind of operation that was taking place from the user’s point of view, or where there is no user from the reporting device’s point of view.\nJudgement is needed to find the best way to model a particular event.\nFor example, a delete operation could actually just mark a record within the database in such a way as to prevent it from being displayed and so is effectively (at least internally) an update. But from the user’s point of view it is a destructive operation - so it should be modelled as a delete.\nIt is important that events with similar effects are modelled similarly, in order that analytics can operate effectively. Examples that illustrate how the schema should be used are described here.\n","categories":"","description":"The verb or action in an event, e.g. Import, Copy, Authenticate, etc.\n","excerpt":"The verb or action in an event, e.g. Import, Copy, Authenticate, etc.\n","ref":"/docs/schema-actions/","tags":["schema-action"],"title":"Schema Actions"},{"body":"This site is built using Hugo with the Docsy Hugo theme. The content is pre-dominantly authored in Markdown with some Hugo shortcodes.\nUseful external links   Hugo    static site generator.  Docsy    theme for Hugo.  Commonmark Markdown    cheat sheet and tutorial.  ","categories":"","description":"This section covers the development and maintenance of this documentation site. The documentation is a community effort with contributions from developers and users.\n","excerpt":"This section covers the development and maintenance of this …","ref":"/community/documentation/","tags":"","title":"Documenting the Schema"},{"body":"When describing what happened in an event there is usually an entity or entities involved in the event, e.g. a user deleting a document, sending an email, creating a virtual session, etc. The majority of the schema actions support acting on one or more instances of the MultiObjectComplexType, this structure describes a choice of the following entity types:\nWhere the entity involved in the event cannot be described by one of the predefined categories in this structure then the \u003cObject\u003e structure can be used as a last resort.\nCommon Structural Elements The following elements are common to all of the above object types;\n Type - The type of the object in question and specific to the object type from the list above, e.g. a \u003cResource\u003e object may have a type such as ‘image’ or ‘script’ Id - An identifier for the object, e.g a document ID in a document management system Name - The name of the object, e.g. a filename Description - Human readable description of what the object is Classification - Any classification or restrictions placed on the object, e.g. for commercially sensitive reports or user health records (see Basic Structure) State - Any state information about the object, e.g. ‘Archived’ Groups - Any groups associated with the object, e.g. group membership of a user account Permissions - Any permissions associated with the object, e.g. write access being granted to a list of named users or groups Data - An extensible structure for additional unstructured data as described in Unstructured Data Meta - An extensible structure for structured meta data as described in Meta Element  ","categories":"","description":"Object types used to describe the entity or entities that are the subject of an event.\n","excerpt":"Object types used to describe the entity or entities that are the …","ref":"/docs/object-types/","tags":"","title":"Object Types"},{"body":"How can I check the schema is valid before submitting a pull request? Run the following (which relies on libxml2-utils):\nxmllint --noout --schema http://www.w3.org/2001/XMLSchema.xsd event-logging-vX.X.X.xsd   ","categories":"","description":"","excerpt":"How can I check the schema is valid before submitting a pull request? …","ref":"/community/dev-guide/faq/","tags":["faq"],"title":"Frequently Asked Questions"},{"body":"In some cases there may not be an adequate data structure for capturing the content of a field. In these cases data can be captured using the \u003cData\u003e element content model, see the following example.\n\u003cEventDetail\u003e  \u003cData Name=\"infoKey\" Value=\"Info\"/\u003e  \u003cData Name=\"otherInfoKey\" Value=\"OtherInfo\"/\u003e \u003c/EventDetail\u003e \u003cData\u003e elements can be nested to indicate hierarchy if necessary and can be included within many of the predefined data structures, for example.\n\u003cEventDetail\u003e  \u003cData Name=\"user\" Value=\"Flack\"\u003e  \u003cData Name=\"role\" Value=\"manager\"/\u003e  \u003cData Name=\"staff\"\u003e  \u003cData Name=\"user\" Value=\"Cuthbert\"\u003e  \u003cData Name=\"role\" Value=\"underling\"/\u003e  \u003cData Name=\"staff\"/\u003e  \u003c/Data\u003e  \u003cData Name=\"user\" Value=\"Dibble\"\u003e  \u003cData Name=\"role\" Value=\"underling\"/\u003e  \u003cData Name=\"staff\"/\u003e  \u003c/Data\u003e  \u003cData Name=\"user\" Value=\"Grub\"\u003e  \u003cData Name=\"role\" Value=\"underling\"/\u003e  \u003cData Name=\"staff\"/\u003e  \u003c/Data\u003e  \u003c/Data\u003e  \u003c/Data\u003e \u003c/EventDetail\u003e Extensive use of the unstructured Data elements can lead to difficulties in processing events unless the name and value attributes have been used in a consistent way. Their use may highlight the need for changes to the schema so that the data can be captured in a common and consistent way. They can however by useful for capturing detailed domain/system specific information about an event that you would not expect to search on but that could provided extra detail if the event is included in search results.\n","categories":"","description":"When producing schema compliant data, each and every data field from an event should populate the most appropriate element in the schema.\n","excerpt":"When producing schema compliant data, each and every data field from …","ref":"/docs/unstructured-data/","tags":"","title":"Unstructured Data"},{"body":"Date and Time Fields All date and time fields (e.g. Event time, see section 3.1) must be supplied in ISO-8601 format in the UTC    time zone with millisecond precision, e.g. 2008-11-18T09:47:12.261Z. This ensures all events are in the same time zone and can be correctly ordered irrespective of the local time. The time source should be synchronised with a reliable NTP    server.\nDate time fields must be zero filled where data does not provide millisecond precision, e.g. 2008-11-18T00:00:00.000Z.\nThe ISO-8601 date time format is yyyy-MM-ddThh:mm:ss.sssZ where:\n   Char Description     yyyy 4 digit year   MM 2 digit month   dd 2 digit day   T indicates that the rest of the string is a time   hh 2 digit hour   mm 2 digit minute   ss 2 digit second   sss 3 digit millisecond   : literal separator   . literal separator   Z literal value denoting the time is Zulu time (UTC)    IP Addresses IP Addresses can be provided in IPv4 or IPv6 forms.\n IPv4 - Must be specified as four sets of digits separated by full stops (e.g. 255.255.255.0 and 147.80.1.1). IPv6 - Must be specified as eight sets of hexadecimal digits separated by commas (e.g. 2001:cdba:0000:0000:0000:0000:3257:9652. Though it is permitted for IPv6 addresses to be surrounded by square brackets when used in a URL, these brackets must be omitted when an IPv6 address is used in isolation.  The acceptable range for each number is 0 – 255.\nPort Numbers All port numbers specified must fall within the range 0 – 65535 inclusive.\nUsers Data provided within \u003cUser\u003e\u003cId\u003e elements is expected to be a PKI DN.\n","categories":"","description":"Various common data types used in the schema.\n","excerpt":"Various common data types used in the schema.\n","ref":"/docs/data-types/","tags":"","title":"Data Types"},{"body":"The \u003cMeta\u003e element appears in a number of places in the schema. The purpose of the \u003cMeta\u003e element is to allow for extensibility of events with meta data whose structure is defined outside of this schema. Such content could be site specific and thus not warrant inclusion in the event-logging schema. It may also be used for decorating events post-receipt.\nThe \u003cMeta\u003e element is of type evt:AnyContentComplexType which is basically a wrapper around an xs:any element so it can support different data structures such as JSON, YAML, XML (conforming to another schema), CSV, etc.\nA \u003cMeta\u003e element can look like this:\n\u003cMeta ContentType=\"XML:MyMeta\" Version=\"1.2\"\u003e  \u003cMyMeta xmlns=\"http://myorg.mydomain.mymeta\"\u003e  \u003cElementA\u003e\u003c/ElementA\u003e  \u003cElementB\u003e\u003c/ElementB\u003e  \u003c/MyMeta\u003e \u003c/Meta\u003e The ContentType attribute is used to provide a computer readable name or key for the type of data held within \u003cMeta\u003e. This will allow to the system reading the event to be able to appropriately parse the content, if it is able to. The value of the attribute would be specific to the use of that type of meta data.\nThe Version attribute is used to optional specify the version of the structure used inside the \u003cMeta\u003e element. Some data formats are self describing when it comes to their version so this attribute may not be required.\nMultiple \u003cMeta\u003e elements are supported allowing for various different types of meta data to be attached to the event.\n","categories":"","description":"An element to allow extensibility of events.\n","excerpt":"An element to allow extensibility of events.\n","ref":"/docs/meta/","tags":["meta"],"title":"Meta Element"},{"body":" Note All entities including organisations, persons, devices and applications are imaginary. All details (e.g. MAC Address, Name, IP Address) are similarly imaginary and any relationship to any real entities is entirely coincidental!  In some places the \u003cUserDetails\u003e element has been abbreviated for clarity using an ellipsis (…). Typically the system generating the event will not know anything about a user beyond some identifier so a common practice is to decorate the event with a fully populated \u003cUserDetails\u003e element in the system processing the events. This approach means only one system needs to be able to resolve a user identifier into a rich set of data.\nIn a real-world situation, a design decision would be needed - when to leave the event more concise using only an ID and when to join with additional information. Data such as user details change slowly, but they do change, e.g. as people get promoted, change role, etc. Therefore, such a joining process would utilise the values for these additional data fields that were correct at the time the event was generated. Certain tools such as Stroom    support this, and are sufficiently flexible to allow this enrichment process to take place during initial normalisation prior to storage, during analysis or at query time / inspection.\nThe same principle applies to Device details, etc.\nCompression such as ZIP can very significantly reduce the overhead associated with highly repetitive data, and are able to allow fully enriched data to be persisted with only minimal overhead.\nEvent Logging schema does not suggest any level of detail, and so to be more illustrative these examples vary in the level of detail provided, e.g. within \u003cUserDetails\u003e.\nOrganisations may wish to standardise, to maximise consistency and simplify analytic development. However, in most real-world situations, the level of detail is likely to vary due to gaps in the data available to the organisation. For example, an event that describes the sending of an email from a company employee to an external email address may be expected to provide significantly more detail about the sender than the recipient within \u003cUserDetails\u003e.\nExample files The following are links to annotated example \u003cEvents\u003e XML documents that are valid against the Event Logging Schema.\n Schema Actions (within \u003cEventDetail\u003e)  \u003cAlert\u003e  \u003cAlert\u003e/\u003cNetwork\u003e XML   \u003cImport\u003e  \u003cImport\u003e/\u003cFile\u003e XML \u003cImport\u003e/\u003cObject\u003e XML   \u003cNetwork\u003e  \u003cNetwork\u003e/\u003cClose\u003e XML   \u003cPrint\u003e  \u003cPrint\u003e XML   \u003cSearch\u003e  \u003cSearch\u003e XML   \u003cSend\u003e  \u003cSend\u003e/\u003cDocument\u003e XML \u003cSend\u003e/\u003cFile\u003e XML     Object Types  \u003cSearchResults\u003e XML \u003cCriteria\u003e XML   Other  \u003cEvent\u003e/\u003cMeta\u003e  \u003cEvent\u003e/\u003cMeta\u003e (JSON) XML \u003cEvent\u003e/\u003cMeta\u003e (XML) XML      ","categories":"","description":"A number of examples of complete events are provided below, in order to illustrate use of the schema.\n","excerpt":"A number of examples of complete events are provided below, in order …","ref":"/docs/complete-examples/","tags":"","title":"Complete Examples"},{"body":"ACL Access Control List. A list or rules specifying which users, groups or systems are allowed (or deined) access to a particular object or resource.\nAPI Application Programming Interface. A software interface used with two applications or systems communicate.\nCRUD Create, Read, Update, Delete. Often used to describe the typical actions a user can perform in a system, e.g. creating a record, deleting a record, etc.\nDN LDAP Distinguished Name.\nDecoration The process of augmenting an event record with additional information obtained from other systems using key identifiers in the event. For example resolving an FQDN    in an asset management database to provide location details.\nFQDN Fully Qualified Domain Name or Absolute Domain Name.\nGMT Greenwich Mean Time was the former international time standard, now replaced by UTC    .\nHTML Hyper Text Markup Language.\nIM Instant Message or Online Chat. A form of real time messaging between users or groups of users.\nIP Internet Protocol. The network protocol that backs the Internet.\nISO-8601 The international standard for representing dates and times. ISO-8601 has a number of valid formats however the Schema uses only the full date and time format in UTC    with fractional seconds, i.e.:\nyyyy-MM-ddThh:mm:ss.mmmZ\nSee Date and Time Fields for more detail on the format used in the Schema.\nFor more general information on ISO-8601 see Wikipedia    .\nLDAP Lightweight Directory Access Protocol. An open industry standard for accessing and maintaining distributed directory information services over a network.\nMAC Machine Access Control. The MAC address is a unique identifier assigned to a network interface controller. It allows a network attached device to be uniquely identified by the network adapter/controller that connects it to the network.\nNTP Network Time protocol. A protocol for clock synchronisation between computer systems. Typically a computer will synchronise its clock using a trusted NTP server.\nObject Type Within an event, this is the type of the object/entity that is the subject of the event. Examples of Object Type are \u003cFile\u003e, \u003cUser\u003e, etc.\nSee Object Types\nPKI Public Key Infrastructure. A set of roles, policies, software and hardware used to use and manage digital certificates and public key encryption. Public key infrastructure will typically involve public keys, private keys and trusted certificate authorities.\nSchema Action This is essentially the verb or action of the event, e.g. \u003cCreate\u003e, \u003cSearch\u003e, etc. Every event must have a schema action that describes what the user is doing.\nSee Schema Actions\nUTC Coordinated Universal Time. The international standard for regulating clocks with a time-zone offset of 0. The successor to GMT    Sometimes referred to as Zulu time.\nFor more detail on UTC see UTC    .\nVOIP Voice Over Internet Protocol or IP    Telephony. The method of delivering voice communications over the internet or a local intranet rather than a traditional Public Switched Telephone Network.\n","categories":"","description":"Glossary of common words, terms and abreviations used in Stroom.\n","excerpt":"Glossary of common words, terms and abreviations used in Stroom.\n","ref":"/docs/glossary/","tags":"","title":"Glossary"},{"body":"The Schema documentation has been re-vamped with a new look and feel. The documentation is now versioned so that you are only reading documentation applicable to one minor version of the schema.\nOther improvements:\n Addtion of News and Releases sections Better site and page navigation with the left and right hand menus Tagging of content to help find related material  ","categories":"","description":"A refresh of the schema documentation site for a new look and feel.\n","excerpt":"A refresh of the schema documentation site for a new look and feel.\n","ref":"/news/news/20220511-new-docs-site/","tags":"","title":"New Documentation Site"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/style/","tags":"","title":"style"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"This schema action should be used to describe events relating to alerts generated from such things as anti-virus/malware monitoring systems, intrusion detection stytems, infrastructure/network monitoring systems or other rule based alerting systems.\nThe enumerated \u003cType\u003e of the alert must be provided to categorise the alert. The remainder of the elements are optional to allow for flexibility in describing the event action.\nAn example alert action for a disk usage monitoring system is as follows:\n\u003cEventDetail\u003e  \u003cTypeId\u003eerr1234\u003c/TypeId\u003e  \u003cAlert\u003e  \u003cType\u003eError\u003c/Type\u003e  \u003cDescription\u003e/dev/sda1 is 100% full\u003c/Description\u003e  \u003c/Alert\u003e \u003c/EventDetail\u003e The following is an example of an alert from a network device performing packet filtering:\n\u003cEventDetail\u003e  \u003cTypeId\u003e4921\u003c/TypeId\u003e  \u003cDescription\u003eA packet was rejected by filter xyz\u003c/Description\u003e  \u003cAlert\u003e  \u003cType\u003eNetwork\u003c/Type\u003e  \u003cNetwork\u003e  \u003cSource\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.0.4\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.7.5\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003c/Destination\u003e  \u003c/Network\u003e  \u003c/Alert\u003e \u003c/EventDetail\u003e ","categories":"","description":"A alert being generated by a system.\n","excerpt":"A alert being generated by a system.\n","ref":"/docs/schema-actions/alert/","tags":["schema-action"],"title":"Alert"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/alert/","tags":"","title":"alert"},{"body":"This schema action describes events that fit the following use cases:\n Acceptance - A user clicking accepting an acceptable use terms banner Approval Request - User A requesting that a more senior user approves something (e.g. approving a document or a timesheet) Approval - User B approving (or rejecting) the approval requested by user A for some thing or action (e.g. approving a document or timesheet)  Acceptance An example of a user accepting a confirmation popup about the use of cookies.\n\u003cEventDetail\u003e  \u003cTypeId\u003eAcceptCookies\u003c/TypeId\u003e  \u003cDescription\u003eUser has accepted use of cookies\u003c/Description\u003e  \u003cApproval\u003e  \u003cAction\u003eAccept\u003c/Action\u003e  \u003cSubject\u003e  \u003cBanner\u003e  \u003cType\u003eAccepiableUseBanner\u003c/Type\u003e  \u003cDescription\u003eCookies enhance your online experience. Simply click 'Accept and continue to site' to agree to the use of all cookies, or change them in your settings. See our Cookie policy at http://some-domain/policies/cookies.html for more information.\u003c/Description\u003e  \u003c/Banner\u003e  \u003c/Subject\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Approval\u003e \u003c/EventDetail\u003e Approval Request An example of a user requesting approval from a more senior user (or another user with approval rights):\n\u003cEventDetail\u003e  \u003cTypeId\u003eRequestTimesheetApproval\u003c/TypeId\u003e  \u003cDescription\u003eUser has request the approval of their timesheet\u003c/Description\u003e  \u003cApproval\u003e  \u003cAction\u003eRequest Approval\u003c/Action\u003e  \u003cSubject\u003e  \u003cDocument\u003e  \u003cTitle\u003ejbloggs_20190125_timesheet\u003c/Title\u003e  \u003c/Document\u003e  \u003c/Subject\u003e  \u003cApprovers\u003e  \u003cApprover\u003e  \u003c!-- the user with approval rights --\u003e  \u003cId\u003eCN=John Smith (jsmith), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003cApprover\u003e  \u003c/Approvers\u003e  \u003c/Approval\u003e \u003c/EventDetail\u003e Approval An example of a user approving a timesheet for another user:\n\u003cEventDetail\u003e  \u003cTypeId\u003eApproveTimesheet\u003c/TypeId\u003e  \u003cDescription\u003eUser is approving the timesheet for jbloggs\u003c/Description\u003e  \u003cApproval\u003e  \u003cAction\u003eApprove\u003c/Action\u003e  \u003cSubject\u003e  \u003cDocument\u003e  \u003cTitle\u003ejbloggs_20190125_timesheet\u003c/Title\u003e  \u003c/Document\u003e  \u003c/Subject\u003e  \u003cRequestors\u003e  \u003cRequestor\u003e  \u003c!-- the user with approval rights --\u003e  \u003cId\u003eCN=Joe Bloggs (jbloggs), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003cRequestor\u003e  \u003c/Requestors\u003e  \u003c/Approval\u003e \u003c/EventDetail\u003e Rejection An example of a user rejecting a timesheet for another user:\n\u003cEventDetail\u003e  \u003cTypeId\u003eRejectTimesheet\u003c/TypeId\u003e  \u003cDescription\u003eUser is approving the timesheet for jbloggs\u003c/Description\u003e  \u003cApproval\u003e  \u003cAction\u003eReject\u003c/Action\u003e  \u003cSubject\u003e  \u003cDocument\u003e  \u003cTitle\u003ejbloggs_20190125_timesheet\u003c/Title\u003e  \u003c/Document\u003e  \u003c/Subject\u003e  \u003cRequestors\u003e  \u003cRequestor\u003e  \u003c!-- the user with approval rights --\u003e  \u003cId\u003eCN=Joe Bloggs (jbloggs), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003cRequestor\u003e  \u003c/Requestors\u003e  \u003cReason\u003eClaimed too many hours\u003c/Reason\u003e  \u003c/Approval\u003e \u003c/EventDetail\u003e ","categories":"","description":"Describes events relating to the approval (or rejection) of things, or the requests for approval.\n","excerpt":"Describes events relating to the approval (or rejection) of things, or …","ref":"/docs/schema-actions/approval/","tags":["schema-action"],"title":"Approval"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/approval/","tags":"","title":"approval"},{"body":"This schema action describe authentication events such as operating system logon or logon to an application or website. It can also be used to describe the authentication that happens when a user passes through an access controlled door.\nOperating System and Application Authentication Operating systems and applications that require user authentication before they can be accessed should record the following actions:\n Logon – Logon to OS or application requiring authentication. Logoff – Logoff of OS or application. Lock – Lock/suspend an OS or application session. Unlock – Unlock/resume an OS or application session.  Details of the device in question shall be contained within the \u003cEventSource\u003e element. The above actions can be recorded in the \u003cAuthentication\u003e\u003cAction\u003e element, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eInteractiveLogon\u003c/TypeId\u003e  \u003cDescription\u003eA user has logged on.\u003c/Description\u003e  \u003cAuthentication\u003e  \u003cAction\u003eLogon\u003c/Action\u003e  \u003cLogonType\u003eInteractive\u003c/LogonType\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Authentication\u003e \u003c/EventDetail\u003e There are multiple session types related to authentication events that describe local logon, remote logon etc. The logon type may be included in the \u003cLogonType\u003e element. Possible values for \u003cLogonType\u003e are defined in the AuthenticateLogonTypeSimpleType and are explained below:\n  Interactive - A logon to a domain by a user.\n  Network - A logon to a computer via a network, e.g. accessing a shared folder.\n  Batch - A background scheduled task running as the user.\n  Service - A background service running as a user.\n  Unlock - A user un-locking a password protected screen lock or screen saver.\n  NetworkCleartext - A network logon similar to Network except that the password is sent of the network in plain text.\n  NewCredentials - When a program is run with RunAs and using /netonly any connections to other computers on the network will be as the RunAs user so will result in a NewCredentials logon to that computer.\n  RemoteInteractive - A user logging on interactively to a computer over the network using Remote Desktop Protocol (RDP) or similar.\n  CachedInteractive - When the user’s computer is disconnected from the network (and domain controller) a cache of their hashed credentials is used to authenticate them.\n  CachedRemoteInteractive - When cached hashed credentials are used to logon to a computer over the network using RDP or similar.\n  CachedUnlock - When cached hashed credentials are used to unlock a password protected screen lock or screen saver.\n  Proxy - A proxy type logon.\n  Other - When some other logon type is used. Use the \u003cData\u003e element to provide more detail.\n\u003cData Name=\"OtherLogonType\" Value=\"Whatever\"/\u003e   If an authentication action fails the optional \u003cOutcome\u003e element can be included in the description with a Success attribute set to false. The \u003cDescription\u003e and \u003cReason\u003e elements within \u003cOutcome\u003e may also be included to indicate why the action failed, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eInteractiveLogon\u003c/TypeId\u003e  \u003cDescription\u003eA user has logged on.\u003c/Description\u003e  \u003cAuthentication\u003e  \u003cAction\u003eLogon\u003c/Action\u003e  \u003cLogonType\u003eInteractive\u003c/LogonType\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003cOutcome\u003e  \u003cSuccess\u003efalse\u003c/Success\u003e  \u003cDescription\u003eLogon failure. Incorrect password.\u003c/Description\u003e  \u003cReason\u003eIncorrectPassword\u003c/Reason\u003e  \u003c/Outcome\u003e  \u003c/Authentication\u003e  \u003c/EventDetail\u003e In addition to logon and logoff, there are additional authentication related events supported by the schema. These include the following:\n ChangePassword – An account password is changed. AccountLock – The action of locking an account, either by an administrator or as a result of multiple logon failures. AccountUnlock – The action of unlocking an account by an administrator.  Physical Access This information is described as an authentication event using the schema, as shown in the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eDoorEntry\u003c/TypeId\u003e  \u003cDescription\u003eA person has entered the building.\u003c/Description\u003e  \u003cAuthentication\u003e  \u003cAction\u003eLogon\u003c/Action\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Authentication\u003e \u003c/EventDetail\u003e ","categories":"","description":"The action of authenticating with a system, including door control systems.\n","excerpt":"The action of authenticating with a system, including door control …","ref":"/docs/schema-actions/authenticate/","tags":["schema-action"],"title":"Authenticate"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/authenticate/","tags":"","title":"authenticate"},{"body":"This schema action describes the event actions relating to the management of group membership or permissions of entities such as documents or users.\nProviding a user with access to a group is described as adding groups to a user as shown in the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eAddGroup\u003c/TypeId\u003e  \u003cDescription\u003eAssigning an LDAP group to a user.\u003c/Description\u003e  \u003cAuthorise\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003cAction\u003eModify\u003c/Action\u003e  \u003cAddGroups\u003e  \u003cGroup\u003e  \u003cType\u003eACG\u003c/Type\u003e  \u003cId\u003eABC\u003c/Id\u003e  \u003c/Group\u003e  \u003c/AddGroups\u003e  \u003c/Authorise\u003e \u003c/EventDetail\u003e Removing access to a group is done in the same way but uses the \u003cRemoveGroups\u003e element.\nThis structure can also be used to model situations where a user is making an explicit request for access to a particular entity.\n","categories":"","description":"The management of authorisation group membership or permissions.\n","excerpt":"The management of authorisation group membership or permissions.\n","ref":"/docs/schema-actions/authorise/","tags":["schema-action"],"title":"Authorise"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/authorise/","tags":"","title":"authorise"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/complete-example/","tags":"","title":"complete-example"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/copy/","tags":"","title":"copy"},{"body":"The \u003cCopy\u003e and \u003cMove\u003e elements are used to describe local copy and move operations. They both contain the same element structure and describe the source and destination for the copy/move event.\nWhen an entity is being sent to a remote recipient then the \u003cSend\u003e and \u003cReceive\u003e actions should be used instead (see Send and Receive).\nThe following example shows a copy event that has failed due to a lack of necessary permissions.\n\u003cEventDetail\u003e  \u003cTypeId\u003eCopyDocument\u003c/TypeId\u003e  \u003cCopy\u003e  \u003cSource\u003e  \u003cDocument\u003e  \u003cTitle\u003eSome document.\u003c/Title\u003e  \u003cPath\u003e/PathSrc/some document.txt\u003c/Path\u003e  \u003c/Document\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDocument\u003e  \u003cTitle\u003eSome document.\u003c/Title\u003e  \u003cPath\u003e/PathDest/some document.txt\u003c/Path\u003e  \u003c/Document\u003e  \u003c/Destination\u003e  \u003cOutcome\u003e  \u003cPermitted\u003efalse\u003c/Permitted\u003e  \u003cDescription\u003eUser does not have write permissions to /PathDest\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Copy\u003e \u003c/EventDetail\u003e As with all data related events, other types of data can be described for the copy or move events, e.g. files, configuration data and messages such as email.\n","categories":"","description":"The action of copying or moving an object/entity.\n","excerpt":"The action of copying or moving an object/entity.\n","ref":"/docs/schema-actions/copy-move/","tags":["schema-action"],"title":"Copy / Move"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/create/","tags":"","title":"create"},{"body":"Whenever data is created, viewed and deleted, an event can be described for audit purposes.\nAlthough ‘Read’ is usually used to describe the act of viewing information it is also associated with invisible system operations where processes are reading data. For the purposes of logging auditable events it was thought that ‘View’ was a more appropriate term.\nThe \u003cCreate\u003e, \u003cView\u003e and \u003cDelete\u003e events all have the same content model that describes the data in question. An example event generated when viewing a document is shown in the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eViewDocument\u003c/TypeId\u003e  \u003cView\u003e  \u003cDocument\u003e  \u003cPermissions\u003e  \u003cPermission\u003e  \u003cUser\u003e  \u003cId\u003eSome Author\u003c/Id\u003e  \u003c/User\u003e  \u003cAllow\u003eAuthor\u003c/Allow\u003e  \u003c/Permission\u003e  \u003c/Permissions\u003e  \u003cTitle\u003eSome document.\u003c/Title\u003e  \u003cPath\u003e/Some path/some document.txt\u003c/Path\u003e  \u003c/Document\u003e  \u003c/View\u003e \u003c/EventDetail\u003e As with all data related events, other types of data can be described within this structure, e.g. files, folders, configuration data and web pages. Other objects can be described using the \u003cObject\u003e element with an appropriate \u003cType\u003e to describe what they are.\nRole/Permission Management Roles, permissions, communities and access groups are all treated as types of group that a user or other system actor can belong to. Groups that are added and removed from a system are described in CRUD operations the same way as any other entity. The following example demonstrates removing an access control group.\n\u003cEventDetail\u003e  \u003cTypeId\u003eRemoveGroup\u003c/TypeId\u003e  \u003cDescription\u003eRemoving an LDAP group.\u003c/Description\u003e  \u003cDelete\u003e  \u003cGroup\u003e  \u003cType\u003eLDAP Group\u003c/Type\u003e  \u003cId\u003eDEF\u003c/Id\u003e  \u003c/Group\u003e  \u003c/Delete\u003e \u003c/EventDetail\u003e User Management Users that are added and removed from a system are described in CRUD operations the same way as any other entity. The following example demonstrates adding a user.\n\u003cEventDetail\u003e  \u003cTypeId\u003eAddUser\u003c/TypeId\u003e  \u003cDescription\u003eAdding a User\u003c/Description\u003e  \u003cCreate\u003e  \u003cUser\u003e  \u003cId\u003eCN=New User (nuser), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Create\u003e \u003c/EventDetail\u003e ","categories":"","description":"The action of creating, viewing or deleting an entity or object.\n","excerpt":"The action of creating, viewing or deleting an entity or object.\n","ref":"/docs/schema-actions/create-view-delete/","tags":["schema-action"],"title":"Create / View / Delete"},{"body":"User is viewing a Criteria ojbect that represents the definition of a search/query that can be executed.\nA View event is used here simply to illustrate the use of Criteria. Criteria can be used within other schema actions.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- View/Criteria event --\u003e   \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eRock Sample Database\u003c/Name\u003e  \u003cEnvironment\u003eSpace\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003cVersion\u003eR8.1\u003c/Version\u003e  \u003c/System\u003e  \u003cGenerator\u003edb-query\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003edb56.serverfarm.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e191.181.171.161\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cHostName\u003edesktop4.moonbase-a.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e111.101.101.111\u003c/IPAddress\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eviewSearchResults\u003c/TypeId\u003e  \u003cDescription\u003eUser is viewing a set of stored search results\u003c/Description\u003e  \u003cView\u003e  \u003cCriteria\u003e  \u003cDataSources\u003e  \u003cDataSource\u003egeology-db\u003c/DataSource\u003e  \u003c/DataSources\u003e  \u003cQuery\u003e  \u003c!-- Provides a link back to the Search event generated when the query was executed --\u003e  \u003cId\u003equery-538393\u003c/Id\u003e  \u003c!-- Tree of terms and operators to describe the query --\u003e  \u003cAdvanced\u003e  \u003cAnd\u003e  \u003cTerm\u003e  \u003cName\u003esize\u003c/Name\u003e  \u003cCondition\u003eEquals\u003c/Condition\u003e  \u003cValue\u003elarge\u003c/Value\u003e  \u003c/Term\u003e  \u003cTerm\u003e  \u003cName\u003ecolour\u003c/Name\u003e  \u003cCondition\u003eEquals\u003c/Condition\u003e  \u003cValue\u003ewhite\u003c/Value\u003e  \u003c/Term\u003e  \u003cTerm\u003e  \u003cName\u003etype\u003c/Name\u003e  \u003cCondition\u003eEquals\u003c/Condition\u003e  \u003cValue\u003er\u003c/Value\u003e  \u003c/Term\u003e  \u003c/And\u003e  \u003c/Advanced\u003e  \u003c/Query\u003e  \u003c/Criteria\u003e  \u003c/View\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"Example of a user _viewing_ a _Criteria_ object.\n","excerpt":"Example of a user _viewing_ a _Criteria_ object.\n","ref":"/docs/complete-examples/xml/object-types/criteria.xml/","tags":["complete-example"],"title":"Criteria"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/criteria/","tags":"","title":"criteria"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/delete/","tags":"","title":"delete"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/document/","tags":"","title":"document"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/export/","tags":"","title":"export"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/file/","tags":"","title":"file"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/group/","tags":"","title":"group"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/import/","tags":"","title":"import"},{"body":"\u003cEventDetail\u003e/\u003cImport\u003e//\u003cObject\u003e The following example illustrates user jc101 importing some data into an application called Geology Image Database. The application is based on geoimg v4.1 and is running on the server geodb.servers.mycloud.myorg.\nThe Object is of Type Image Archive and has an id 14131A. It has a Classification of Geology.\nThere is no Success element in \u003cOutcome\u003e, so it is assumed that the action completed successfully.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- Import Object event --\u003e  \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eGeology Image Database\u003c/Name\u003e  \u003cEnvironment\u003eLive\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003egeoimg v4.1\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003egeodb.servers.mycloud.myorg\u003c/HostName\u003e  \u003cIPAddress\u003e104.105.106.107\u003c/IPAddress\u003e  \u003cMACAddress\u003eAB:CB:BC:DE:EE:FF\u003c/MACAddress\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eIMAGE-IMPORT-ARCHIVE\u003c/TypeId\u003e  \u003cDescription\u003eUser has imported an image archive\u003c/Description\u003e  \u003cImport\u003e  \u003cDestination\u003e  \u003cObject\u003e  \u003cType\u003eImage Archive\u003c/Type\u003e  \u003cId\u003e14131A\u003c/Id\u003e  \u003cDescription\u003eCrater images\u003c/Description\u003e  \u003cClassification\u003e  \u003cText\u003eGeology\u003c/Text\u003e  \u003c/Classification\u003e  \u003c/Object\u003e  \u003c/Destination\u003e  \u003cOutcome\u003e  \u003cDescription\u003eImage archive successfully imported\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Import\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"Example of a user _importing_ an _Object_.\n","excerpt":"Example of a user _importing_ an _Object_.\n","ref":"/docs/complete-examples/xml/schema-actions/import-object.xml/","tags":["complete-example"],"title":"Import (Object)"},{"body":"The \u003cImport\u003e and \u003cExport\u003e elements are used to describe import and export operations. They both contain the same element structure and describe the source and destination for the import/export event. This allows for the source and destination to be of different types, e.g. exporting a search result to a file.\nExamples:\n Import  Data being imported into an application, such that the application now controls that data. Data being imported onto a host (and thereby the host’s network) from removable media.   Export  Data being exported from an application, e.g. exporting a record as a PDF document. Data being exported onto removable media.    The following example shows an export event that has failed due to a lack of necessary permissions.\n\u003cEventDetail\u003e  \u003cTypeId\u003eExportDocument\u003c/TypeId\u003e  \u003cExport\u003e  \u003cSource\u003e  \u003cDocument\u003e  \u003cId\u003e23894728937\u003c/Id\u003e  \u003cTitle\u003eMy Big Document\u003c/Title\u003e  \u003cPath\u003e/path/in/document/management/system/MyBigDocument.odf\u003c/Path\u003e  \u003cPages\u003e10\u003c/Pages\u003e  \u003c/Document\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cFile\u003e  \u003cPath\u003e/file/system/path/MyBigDoc.pdf\u003c/Path\u003e  \u003c/File\u003e  \u003c/Destination\u003e  \u003cOutcome\u003e  \u003cPermitted\u003efalse\u003c/Permitted\u003e  \u003cDescription\u003eUser does not have write permissions to /file/system/path/\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Export\u003e \u003c/EventDetail\u003e ","categories":"","description":"The action of importing or exporting something.\n","excerpt":"The action of importing or exporting something.\n","ref":"/docs/schema-actions/import-export/","tags":["schema-action"],"title":"Import / Export"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/install/","tags":"","title":"install"},{"body":"This action can be used for recording the installation or removal of software. Also, some systems are able to monitor for addition or removal of hardware/media. Where this is possible install/uninstall events can be used for this purpose.\nThe following example shows a typical event that could be recorded when hardware addition is detected. Note that the addition of hardware in this instance is not permitted due to restrictions applied to the device in question.\n\u003cEventDetail\u003e  \u003cTypeId\u003eInstallHardware\u003c/TypeId\u003e  \u003cInstall\u003e  \u003cHardware\u003e  \u003cType\u003eUSBMassStorage\u003c/Type\u003e  \u003cManufacturer\u003eSome Manufacturer\u003c/Manufacturer\u003e  \u003cCapacity\u003e8589934592\u003c/Capacity\u003e  \u003c/Hardware\u003e  \u003cOutcome\u003e  \u003cPermitted\u003efalse\u003c/Permitted\u003e  \u003cDescription\u003eNo hardware is allowed to be added.\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Install\u003e \u003c/EventDetail\u003e  Whenever read only or recordable media are inserted into a device this may be recorded for audit purposes. The media type may be described (e.g. DVD, CD) as well as whether or not the media is writeable. The capacity can also be specified in bytes, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eInsertRemovableMedia\u003c/TypeId\u003e  \u003cInstall\u003e  \u003cMedia\u003e  \u003cType\u003eCD\u003c/Type\u003e  \u003cReadWrite\u003etrue\u003c/ReadWrite\u003e  \u003cCapacity\u003e671088640\u003c/Capacity\u003e  \u003c/Media\u003e  \u003c/Install\u003e \u003c/EventDetail\u003e The following is an example of an event recording the installation of a piece of software:\n\u003cEventDetail\u003e  \u003cTypeId\u003eyumInstall\u003c/TypeId\u003e  \u003cInstall\u003e  \u003cSoftware\u003e  \u003cName\u003evim\u003c/Name\u003e  \u003cVersion\u003e7.4\u003c/Version\u003e  \u003c/Software\u003e  \u003c/Install\u003e \u003c/EventDetail\u003e ","categories":"","description":"Recording the installation or removal of software.\n","excerpt":"Recording the installation or removal of software.\n","ref":"/docs/schema-actions/install-uninstall/","tags":["schema-action"],"title":"Install / Uninstall"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/meta/","tags":"","title":"meta"},{"body":"\u003cEvent\u003e/\u003cMeta\u003e (JSON) \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- JSON Meta example --\u003e  \u003cEvent\u003e  \u003cMeta ContentType=\"JSON:streamMeta\" Version=\"1.2.3\"\u003e  {  \"streamMeta\":{  \"streamId\":\"12345\",  \"eventId\":\"45678\"  }  }  \u003c/Meta\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e  \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eSPACEPRINT\u003c/Name\u003e  \u003cEnvironment\u003eLuna1\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eZeroGPrinter\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003eprn01.luna1.lan.myorg.com\u003c/HostName\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e  \u003cEventDetail\u003e  \u003cTypeId\u003eBWPrint\u003c/TypeId\u003e  \u003cDescription\u003eSystem has finished printing\u003c/Description\u003e  \u003cPrint\u003e  \u003cAction\u003eFinishPrint\u003c/Action\u003e  \u003cPrintJob\u003e  \u003cDocument\u003e  \u003cTitle\u003eResume - J Coder\u003c/Title\u003e  \u003c/Document\u003e  \u003cPages\u003e2\u003c/Pages\u003e  \u003cSize\u003e3410212\u003c/Size\u003e  \u003cSubmitted\u003e2017-01-02T03:03:51.234Z\u003c/Submitted\u003e  \u003c/PrintJob\u003e  \u003cOutcome\u003e  \u003cSuccess\u003etrue\u003c/Success\u003e  \u003c/Outcome\u003e  \u003c/Print\u003e  \u003c/EventDetail\u003e  \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of attaching JSON Meta data to an event.\n","excerpt":"An example of attaching JSON Meta data to an event.\n","ref":"/docs/complete-examples/xml/event-meta-json.xml/","tags":["complete-example","meta"],"title":"Meta (JSON)"},{"body":"\u003cEvent\u003e/\u003cMeta\u003e (XML) \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- XML Meta example --\u003e  \u003cEvent\u003e  \u003cMeta ContentType=\"XML:MyMeta\" Version=\"1.2\"\u003e  \u003cMyMeta xmlns=\"http://myorg.mydomain.mymeta\"\u003e  \u003cElementA\u003evalue A\u003c/ElementA\u003e  \u003cElementB\u003evalue B\u003c/ElementB\u003e  \u003c/MyMeta\u003e  \u003c/Meta\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e  \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eSPACEPRINT\u003c/Name\u003e  \u003cEnvironment\u003eLuna1\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eZeroGPrinter\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003eprn01.luna1.lan.myorg.com\u003c/HostName\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e  \u003cEventDetail\u003e  \u003cTypeId\u003eBWPrint\u003c/TypeId\u003e  \u003cDescription\u003eSystem has finished printing\u003c/Description\u003e  \u003cPrint\u003e  \u003cAction\u003eFinishPrint\u003c/Action\u003e  \u003cPrintJob\u003e  \u003cDocument\u003e  \u003cTitle\u003eResume - J Coder\u003c/Title\u003e  \u003c/Document\u003e  \u003cPages\u003e2\u003c/Pages\u003e  \u003cSize\u003e3410212\u003c/Size\u003e  \u003cSubmitted\u003e2017-01-02T03:03:51.234Z\u003c/Submitted\u003e  \u003c/PrintJob\u003e  \u003cOutcome\u003e  \u003cSuccess\u003etrue\u003c/Success\u003e  \u003c/Outcome\u003e  \u003c/Print\u003e  \u003c/EventDetail\u003e  \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of attaching XML Meta data to an event.\n","excerpt":"An example of attaching XML Meta data to an event.\n","ref":"/docs/complete-examples/xml/event-meta-xml.xml/","tags":["complete-example","meta"],"title":"Meta (XML)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/move/","tags":"","title":"move"},{"body":"Some network devices are able to record auditable events. Typically these events relate to network connections being made between devices and data being transferred between them.\nThere are several types of network device that may be capable of this. They include:\n Firewalls – Allow or block traffic between certain devices depending on configured rules. Details about what connections are blocked and allowed can be recorded. Message boundary filters – Allow or block transfer of messages between devices depending on configured rules. Types of messages could include emails, IM etc.  For each event, details about the source and destination device may be recorded. Where connections/transfers are blocked the rule name and associated message may also be recorded, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eABC123\u003c/TypeId\u003e  \u003cNetwork\u003e  \u003cClose\u003e  \u003cSource\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.1.2\u003c/IPAddress\u003e  \u003cPort\u003e56123\u003c/Port\u003e  \u003c/Device\u003e  \u003cTransportProtocol\u003eUDP\u003c/TransportProtocol\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.1.3\u003c/IPAddress\u003e  \u003cPort\u003e53\u003c/Port\u003e  \u003c/Device\u003e  \u003cApplication\u003eOutlook\u003c/Application\u003e  \u003cTransportProtocol\u003eTCP\u003c/TransportProtocol\u003e  \u003cApplicationProtocol\u003eIMAP\u003c/ApplicationProtocol\u003e  \u003cPort\u003e80\u003c/Port\u003e  \u003c/Destination\u003e  \u003c/Close\u003e  \u003c/Network\u003e \u003c/EventDetail\u003e The Send and Receive sub-elements should be used judiciously as there is some cross-over with the Send and Receive top level schema actions described below. Network/Send and Network/Receive should be limited to low level network events only and not higher level abstractions such as a data transfer service.\n","categories":"","description":"Audit events from network devices.\n","excerpt":"Audit events from network devices.\n","ref":"/docs/schema-actions/network/","tags":["schema-action"],"title":"Network"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/network/","tags":"","title":"network"},{"body":"\u003cEventDetail\u003e/\u003cNetwork\u003e/\u003cClose\u003e This example illustrates the closing of a network connection between two devices.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- Netowrk Close event --\u003e  \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eGeology Image Database\u003c/Name\u003e  \u003cEnvironment\u003eLive\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003egeoimg v4.1\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003egeodb.servers.mycloud.myorg\u003c/HostName\u003e  \u003cIPAddress\u003e104.105.106.107\u003c/IPAddress\u003e  \u003cMACAddress\u003eAB:CB:BC:DE:EE:FF\u003c/MACAddress\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eABC123\u003c/TypeId\u003e  \u003cNetwork\u003e  \u003cClose\u003e  \u003cSource\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.1.2\u003c/IPAddress\u003e  \u003cPort\u003e56123\u003c/Port\u003e  \u003c/Device\u003e  \u003cTransportProtocol\u003eUDP\u003c/TransportProtocol\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.1.3\u003c/IPAddress\u003e  \u003cPort\u003e53\u003c/Port\u003e  \u003c/Device\u003e  \u003cApplication\u003eOutlook\u003c/Application\u003e  \u003cTransportProtocol\u003eTCP\u003c/TransportProtocol\u003e  \u003cApplicationProtocol\u003eIMAP\u003c/ApplicationProtocol\u003e  \u003cPort\u003e80\u003c/Port\u003e  \u003c/Destination\u003e  \u003c/Close\u003e  \u003c/Network\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of closing a network connection.\n","excerpt":"An example of closing a network connection.\n","ref":"/docs/complete-examples/xml/schema-actions/network-close.xml/","tags":["complete-example"],"title":"Network (Close)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/object/","tags":"","title":"object"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/object-type/","tags":"","title":"object-type"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/","tags":"","title":"Object_types"},{"body":"\u003cEventDetail\u003e/\u003cPrint\u003e The following example illustrates a document with the title Resume - J Coder being printed on prn01.luna1.lan.myorg.com by user jc101.\nThe document is 2 pages in length and 3410212 bytes in length.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- Print event The following example illustrates a document with the title Resume - J Coder being printed on prn01.luna1.lan.myorg.com by user jc101. The document is 2 pages in length and 3410212 bytes in length. --\u003e  \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e  \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eSPACEPRINT\u003c/Name\u003e  \u003cEnvironment\u003eLuna1\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eZeroGPrinter\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003eprn01.luna1.lan.myorg.com\u003c/HostName\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e  \u003cEventDetail\u003e  \u003cTypeId\u003eBWPrint\u003c/TypeId\u003e  \u003cDescription\u003eSystem has finished printing\u003c/Description\u003e  \u003cPrint\u003e  \u003cAction\u003eFinishPrint\u003c/Action\u003e  \u003cPrintJob\u003e  \u003cDocument\u003e  \u003cTitle\u003eResume - J Coder\u003c/Title\u003e  \u003c/Document\u003e  \u003cPages\u003e2\u003c/Pages\u003e  \u003cSize\u003e3410212\u003c/Size\u003e  \u003cSubmitted\u003e2017-01-02T03:03:51.234Z\u003c/Submitted\u003e  \u003c/PrintJob\u003e  \u003cOutcome\u003e  \u003cSuccess\u003etrue\u003c/Success\u003e  \u003c/Outcome\u003e  \u003c/Print\u003e  \u003c/EventDetail\u003e  \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of printing a document.\n","excerpt":"An example of printing a document.\n","ref":"/docs/complete-examples/xml/schema-actions/print.xml/","tags":["complete-example"],"title":"Print"},{"body":"There are various events associated with printing due to the queued nature of print jobs. These events are generated by both operating systems and printers and have enumerated values for the \u003cAction\u003e element as follows:\n Operating System:  CreateJob – When a user chooses to print a document. CancelJob – When a user chooses to cancel a print job in the print queue.   Printer:  StartPrint – When the printer begins printing. FinishPrint – When the printer finishes printing. CancelPrint – When the printing is cancelled from the printer.    The description of the event shall be contained within the structure shown in the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003ePrintDocument\u003c/TypeId\u003e  \u003cPrint\u003e  \u003cAction\u003eCreateJob\u003c/Action\u003e  \u003cPrintJob\u003e  \u003cDocument\u003e  \u003cTitle\u003eSome document\u003c/Title\u003e  \u003c/Document\u003e  \u003cPages\u003e40\u003c/Pages\u003e  \u003cSize\u003e644236\u003c/Size\u003e  \u003c/PrintJob\u003e  \u003cPrintSettings\u003e  \u003cPaperSize\u003eA4\u003c/PaperSize\u003e  \u003cOrientation\u003ePortrait\u003c/Orientation\u003e  \u003cColour\u003etrue\u003c/Colour\u003e  \u003cDeviceFonts\u003efalse\u003c/DeviceFonts\u003e  \u003c/PrintSettings\u003e  \u003cPrinter\u003e  \u003cId\u003eprinter796\u003c/Id\u003e  \u003cName\u003eLaserJet4+\u003c/Name\u003e  \u003cIPAddress\u003e192.168.2.52\u003c/IPAddress\u003e  \u003cRoom\u003eA34-2\u003c/Room\u003e  \u003c/Printer\u003e  \u003c/Print\u003e \u003c/EventDetail\u003e For all print actions the \u003cPrintJob\u003e element describes what is being printed. Details about the document related to the print job may be described within the \u003cDocument\u003e element.\nFor print events the \u003cSize\u003e element contains the spooled size of the document being printed in bytes and not the original file size on disk.\nThe printer being used can be described using the \u003cPrinter\u003e element when it is known which printer will be printing the document.\nThe IP address or host name of the printer will either be:\n The IP/host of the printer itself if it is a network printer. The IP/host of the computer that the printer is attached to if it is not a network printer. If a print job fails the reason for failure can be included in the \u003cOutcome\u003e element, see the following example.  \u003cEventDetail\u003e  \u003cTypeId\u003ePrintDocument\u003c/TypeId\u003e  \u003cPrint\u003e  \u003cAction\u003eStartPrint\u003c/Action\u003e  \u003cPrintJob\u003e  \u003cDocument\u003e  \u003cTitle\u003eSome document\u003c/Title\u003e  \u003c/Document\u003e  \u003cPages\u003e40\u003c/Pages\u003e  \u003cSize\u003e644236\u003c/Size\u003e  \u003c/PrintJob\u003e  \u003cPrintSettings\u003e  \u003cPaperSize\u003eA4\u003c/PaperSize\u003e  \u003cOrientation\u003ePortrait\u003c/Orientation\u003e  \u003cColour\u003etrue\u003c/Colour\u003e  \u003cDeviceFonts\u003efalse\u003c/DeviceFonts\u003e  \u003c/PrintSettings\u003e  \u003cPrinter\u003e  \u003cHostName\u003esomeprinter.someorg.org\u003c/HostName\u003e  \u003c/Printer\u003e  \u003cOutcome\u003e  \u003cSuccess\u003efalse\u003c/Success\u003e  \u003cDescription\u003eThe printer is out of paper.\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Print\u003e \u003c/EventDetail\u003e ","categories":"","description":"The action of printing a document.\n","excerpt":"The action of printing a document.\n","ref":"/docs/schema-actions/printing/","tags":["schema-action"],"title":"Print"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/print/","tags":"","title":"print"},{"body":"Processes can be recorded for audit purposes such as:\n Operating system start-up/shutdown. Event logging system start-up/shutdown. Some services start-up/shutdown/install/uninstall. Some applications start-up/shutdown/install/uninstall. Scheduled jobs or batch processes such as shell scripts  Each of these events can be described using the \u003cProcess\u003e element, see the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003e1234\u003c/TypeId\u003e  \u003cProcess\u003e  \u003cAction\u003eStartup\u003c/Action\u003e  \u003cType\u003eApplication\u003c/Type\u003e  \u003cCommand\u003eMsWord.exe\u003c/Command\u003e  \u003c/Process\u003e \u003c/EventDetail\u003e The following is an example of recoding the input and output to a batch process.\n\u003cEventDetail\u003e  \u003cTypeId\u003eSplitData\u003c/TypeId\u003e  \u003cProcess\u003e  \u003cAction\u003eSplit\u003c/Action\u003e  \u003cType\u003eApplication\u003c/Type\u003e  \u003cCommand\u003escript.sh\u003c/Command\u003e  \u003cInput\u003e  \u003cFile\u003e  \u003cPath\u003e/sourcePath/sourceFile.txt\u003c/Path\u003e  \u003c/File\u003e  \u003c/Input\u003e  \u003cOutput\u003e  \u003cFile\u003e  \u003cPath\u003e/destPath/destFile.txt\u003c/Path\u003e  \u003c/File\u003e  \u003c/Output\u003e  \u003c/Process\u003e \u003c/EventDetail\u003e ","categories":"","description":"A process such as running a shell script or a scheduled job.\n","excerpt":"A process such as running a shell script or a scheduled job.\n","ref":"/docs/schema-actions/process/","tags":["schema-action"],"title":"Process"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/process/","tags":"","title":"process"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/receive/","tags":"","title":"receive"},{"body":"This is used to describe a resource within a web site or web application, such as an HTML file, image file or script, along with the details of that resource such as size or response codes. It can represent both successful and failed access to the resource object.\n","categories":"","description":"A resource within a web site or web application, e.g. an HTML file.\n","excerpt":"A resource within a web site or web application, e.g. an HTML file.\n","ref":"/docs/object-types/resource/","tags":["object-type"],"title":"Resource"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/resource/","tags":"","title":"resource"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/schema-action/","tags":"","title":"schema-action"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/","tags":"","title":"Schema_actions"},{"body":"\u003cEventDetail\u003e/\u003cSearch\u003e The following example illustrates a query against a database application. The action is that user jc101 execute a query select r.* from ROCK r where r.TYPE = 'r' and r.SIZE = 'large' and r.COLOUR = 'white' which returned 2 results. The Interactive field is set to false, so it may be inferred that this was an automated operation of some kind.\nThe results were two Objects. Both were of type Rock. The first with an id of 7811 and a name of Surpisingly Heavy Chunk and the second with an id of 11418 and a name of Possible Gold Ore.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- Search event --\u003e  \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003c!-- An identifier for the user's session (e.g. a JSessionId) which can be used to group events that are part of the same session --\u003e  \u003cSessionId\u003e5EFDA7655A8D72E7D04AC2E88E754956\u003c/SessionId\u003e  \u003cSystem\u003e  \u003cName\u003eRock Sample Database\u003c/Name\u003e  \u003cEnvironment\u003eSpace\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003cVersion\u003eR8.1\u003c/Version\u003e  \u003c/System\u003e  \u003cGenerator\u003edb-query\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003edb56.serverfarm.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e191.181.171.161\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cHostName\u003edesktop4.moonbase-a.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e111.101.101.111\u003c/IPAddress\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003efindByConstraint\u003c/TypeId\u003e  \u003cDescription\u003eUser has queried database using specified constraints\u003c/Description\u003e  \u003cSearch\u003e  \u003cQuery\u003e  \u003cId\u003equery-538393\u003c/Id\u003e  \u003cDescription\u003eLarge, white, type 'r'\u003c/Description\u003e  \u003cRaw\u003eselect r.* from ROCK r where r.TYPE = 'r' and r.SIZE = 'large' and r.COLOUR = 'white'\u003c/Raw\u003e  \u003c/Query\u003e  \u003cTotalResults\u003e2\u003c/TotalResults\u003e  \u003cResults\u003e  \u003cObject\u003e  \u003cType\u003eRock\u003c/Type\u003e  \u003cId\u003e78121\u003c/Id\u003e  \u003cName\u003eSurpisingly Heavy Chunk\u003c/Name\u003e  \u003c/Object\u003e  \u003cObject\u003e  \u003cType\u003eRock\u003c/Type\u003e  \u003cId\u003e11418\u003c/Id\u003e  \u003cName\u003ePossible Gold Ore\u003c/Name\u003e  \u003c/Object\u003e  \u003c/Results\u003e  \u003c/Search\u003e  \u003c/EventDetail\u003e  \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of a user performing a SQL query.\n","excerpt":"An example of a user performing a SQL query.\n","ref":"/docs/complete-examples/xml/schema-actions/search.xml/","tags":["complete-example"],"title":"Search"},{"body":"Performing a Search Whenever a user performs a search the details of the search may be recorded for audit purposes. The types of searches that could be performed by a user include searching the file system, remote file shares, emails, public folders and searches for data within applications.\nThere are several formats of search query supported by the schema. They include:\n \u003cAdvanced\u003e – The structure enables complex queries to be built that include combinatorial term logic. \u003cSimple\u003e – Records the terms that the search is looking for and the ones to explicitly exclude. \u003cRaw\u003e – Used for record the executed query string entered by a user or SQL applied to a database.  The ability to create a complex query may be limited by the application or device creating the event log. Where this is the case it may be necessary to use the simple or raw query format. Even if \u003cAdvanced\u003e or \u003cSimple\u003e are used, the inclusion of the raw query string is desirable as it describes the search string that was actually executed.\nAn example search event with a raw query is shown:\n\u003cEventDetail\u003e  \u003cTypeId\u003eBasicSearch\u003c/TypeId\u003e  \u003cSearch\u003e  \u003cQuery\u003e  \u003cId\u003equery-236\u003c/Id\u003e  \u003cRaw\u003eselect * from table_x where user='jbloggs'\u003c/Raw\u003e  \u003c/Query\u003e  \u003c/Search\u003e \u003c/EventDetail\u003e The following example shows a search event with an advanced query where the query is (location != site1 AND (user==jBloggs OR user==jDoe)):\n\u003cEventDetail\u003e  \u003cTypeId\u003eBasicSearch\u003c/TypeId\u003e  \u003cSearch\u003e  \u003cQuery\u003e  \u003cId\u003e364587\u003c/Id\u003e  \u003cAdvanced\u003e  \u003cAnd\u003e  \u003cTerm\u003e  \u003cName\u003elocation\u003c/Name\u003e  \u003cCondition\u003eNotEquals\u003c/Condition\u003e  \u003cValue\u003esite1\u003c/Value\u003e  \u003c/Term\u003e  \u003cOr\u003e  \u003cTerm\u003e  \u003cName\u003euser\u003c/Name\u003e  \u003cCondition\u003eEquals\u003c/Condition\u003e  \u003cValue\u003ejBloggs\u003c/Value\u003e  \u003c/Term\u003e  \u003cTerm\u003e  \u003cName\u003euser\u003c/Name\u003e  \u003cCondition\u003eEquals\u003c/Condition\u003e  \u003cValue\u003ejDoe\u003c/Value\u003e  \u003c/Term\u003e  \u003c/Or\u003e  \u003c/And\u003e  \u003c/Advanced\u003e  \u003cRaw\u003eselect * from table_x where user in ('jbloggs', 'jbloggs') and location \u003c\u003e 'site1'\u003c/Raw\u003e  \u003c/Query\u003e  \u003c/Search\u003e \u003c/EventDetail\u003e Synchronous vs Asynchronous Searches Some search events may be synchronous, where the results are know as part of the search action. For synchronous searches, details of the results can be included within the \u003cSearch\u003e element. Some searches however are asynchronous, where the results are not know at the time the search is executed. For these asynchronous searches, the execution of the search should use the \u003cSearch\u003e schema action and the retreival of the results would be modelled as separate \u003cView\u003e/\u003cSearchResults\u003e event. To link the \u003cSearch\u003e event with the \u003csome schema action\u003e/\u003cSearchResults\u003e event the \u003cQuery\u003e/\u003cId\u003e or \u003cQuery\u003e/\u003cName\u003eelement can be used, as shown in the following example.\n\u003c!-- Search event --\u003e \u003cEventDetail\u003e  \u003cTypeId\u003eAsynchronousUserQuery\u003c/TypeId\u003e  \u003cSearch\u003e  \u003cQuery\u003e  \u003c!-- ID to link the query execution with the subsequent viewing of the results --\u003e  \u003cId\u003e3648595\u003c/Id\u003e  \u003cRaw\u003eselect cv_blob from candidates where user='jbloggs'\u003c/Raw\u003e  \u003c/Query\u003e  \u003c/Search\u003e \u003c/EventDetail\u003e  \u003c!-- View results event --\u003e \u003cEventDetail\u003e  \u003cTypeId\u003eViewUserQueryResults\u003c/TypeId\u003e  \u003cView\u003e  \u003cSearchResults\u003e  \u003cQuery\u003e  \u003c!-- ID to link the query execution with the subsequent viewing of the results --\u003e  \u003cId\u003e3648595\u003c/Id\u003e  \u003c!-- If the query detail was recorded in the initial Search event then it could be omitted here --\u003e  \u003c/Query\u003e  \u003cTotalResults\u003e1\u003c/TotalResults\u003e  \u003cResults\u003e  \u003cDocument\u003e  \u003cTitle\u003eJ Bloggs CV\u003c/Title\u003e  \u003cPath\u003e/tmp/jbloggs_cv.pdf\u003c/Path\u003e  \u003c/Document\u003e  \u003c/Results\u003e  \u003cSearchResults\u003e  \u003c/View\u003e \u003c/EventDetail\u003e Search Results The schema allows for results that are returned from a search to be recorded.\nThe total number of results can be recorded along with a list of the displayed results. Where results are paged (e.g. in a web search) details of the currently displayed page can also be described.\nThe list of results can describe the type of result and provide appropriate details, see the following example.\n\u003cSearch\u003e  ...  \u003cResultPage\u003e  \u003cTotalPages\u003e10\u003c/TotalPages\u003e  \u003cPerPage\u003e10\u003c/PerPage\u003e  \u003cPageNumber\u003e2\u003c/PageNumber\u003e  \u003cFrom\u003e11\u003c/From\u003e  \u003cTo\u003e20\u003c/To\u003e  \u003c/ResultPage\u003e  \u003cTotalResults\u003e100\u003c/TotalResults\u003e  \u003cResults\u003e  \u003cDocument\u003e  \u003cTitle\u003eSome Document 1\u003c/Title\u003e  \u003cPath\u003efile://Some_Path/Some%20Document.doc\u003c/Path\u003e  \u003c/Document\u003e  \u003cWebPage\u003e  \u003cURL\u003ehttp://Some_Path/Some%20HTML%20Page.htm\u003c/URL\u003e  \u003c/WebPage\u003e  \u003c/Results\u003e \u003c/Search\u003e See Complete Examples for example events.\n","categories":"","description":"The action of executing a query, filter or search.\n","excerpt":"The action of executing a query, filter or search.\n","ref":"/docs/schema-actions/search/","tags":["schema-action"],"title":"Search"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/search/","tags":"","title":"search"},{"body":"user is viewing a set of search results independently of the search event that generated them. the query/id element can be used to link the two events together.\nthis object type can be used when the results of the query are not know at the time the search is executed and the search event is created.\na view event is used here simply to illustrate the use of searchresults. searchresults can be used within other schema actions.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- View/SearchResults event --\u003e   \u003cEvent\u003e   \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003c!-- The source system specific unique ID for this event --\u003e  \u003cEventId\u003e1024\u003c/EventId\u003e  \u003cSystem\u003e  \u003cName\u003eRock Sample Database\u003c/Name\u003e  \u003cEnvironment\u003eSpace\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003cVersion\u003eR8.1\u003c/Version\u003e  \u003c/System\u003e  \u003cGenerator\u003edb-query\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003edb56.serverfarm.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e191.181.171.161\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cHostName\u003edesktop4.moonbase-a.mydomain.org\u003c/HostName\u003e  \u003cIPAddress\u003e111.101.101.111\u003c/IPAddress\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eviewSearchResults\u003c/TypeId\u003e  \u003cDescription\u003eUser is viewing a set of stored search results\u003c/Description\u003e  \u003cView\u003e  \u003cSearchResults\u003e  \u003cQuery\u003e  \u003c!-- Provides a link back to the Search event generated when the query was executed. The link can also be acheived using EventLinks below. --\u003e  \u003cId\u003equery-538393\u003c/Id\u003e  \u003c/Query\u003e  \u003cTotalResults\u003e2\u003c/TotalResults\u003e  \u003cResults\u003e  \u003cObject\u003e  \u003cType\u003eRock\u003c/Type\u003e  \u003cId\u003e78121\u003c/Id\u003e  \u003cName\u003eSurpisingly Heavy Chunk\u003c/Name\u003e  \u003c/Object\u003e  \u003cObject\u003e  \u003cType\u003eRock\u003c/Type\u003e  \u003cId\u003e11418\u003c/Id\u003e  \u003cName\u003ePossible Gold Ore\u003c/Name\u003e  \u003c/Object\u003e  \u003c/Results\u003e  \u003c/SearchResults\u003e  \u003c/View\u003e  \u003c/EventDetail\u003e   \u003c!-- This event is linked back to its parent (the initial search) --\u003e  \u003cEventChain\u003e  \u003cActivity\u003e  \u003c!-- Links this event to the one with EventSource/EventId[text()='1023'] --\u003e  \u003cId\u003e92832938\u003c/Id\u003e  \u003cName\u003eSearch execution\u003c/Name\u003e  \u003c/Activity\u003e  \u003c/EventChain\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"example of a user _viewing_ a set of _search results_.\n","excerpt":"example of a user _viewing_ a set of _search results_.\n","ref":"/docs/complete-examples/xml/object-types/search-results.xml/","tags":["complete-example","object-type"],"title":"Search Results"},{"body":"This element is used to describe a set of search results that have a life beyond the execution of the query that generated them. For example where the execution of the query forms one event and the viewing of the results happens some time later and forms another event.\nThis element can be used to describe a single result within a result set, a page of results from a larger result set or a full result set.\nThe separate event for the execution of the search/query that produced the results should be modelled using the \u003cSearch\u003e schema action.\nSee Complete Examples for example events.\n","categories":"","description":"A set of search results that are independent of the query that generated them.\n","excerpt":"A set of search results that are independent of the query that …","ref":"/docs/object-types/search-results/","tags":["object-type"],"title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/search-results/","tags":"","title":"search-results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/send/","tags":"","title":"send"},{"body":"\u003cEventDetail\u003e/\u003cSend\u003e//\u003cDocument\u003e The following example illustrates an application being used to transfer a file to from one user to another user.\nThe action is that the file samples1.zip of size 14127312 bytes was sent by the user jc101 to the user C=GB, O=WeDoRocksCo, OU=Space, CN=Tom Thumb(UID=tthumb01).\nThe file was transferred successfully.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eFileSharer21\u003c/Name\u003e  \u003cDescription\u003eInteractive File Sharing\u003c/Description\u003e  \u003cEnvironment\u003eOperational\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003efs-21-v2.2\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003efs04.fs.myorg.com\u003c/HostName\u003e  \u003cIPAddress\u003e131.141.151.161\u003c/IPAddress\u003e  \u003cMACAddress\u003eA1:B1:C1:D1:E1:F1\u003c/MACAddress\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cIPAddress\u003e121.121.121.121\u003c/IPAddress\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003cUserDetails\u003e  \u003c!-- Fully populated here to illustrate a decorated event--\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003cStaffNumber\u003e101\u003c/StaffNumber\u003e  \u003cSurname\u003eCoder\u003c/Surname\u003e  \u003cInitials\u003eJD\u003c/Initials\u003e  \u003cTitle\u003eMr\u003c/Title\u003e  \u003cKnownAs\u003eJolly\u003c/KnownAs\u003e  \u003cPersonType\u003eEmployee\u003c/PersonType\u003e  \u003cGroup\u003eTechnology\u003c/Group\u003e  \u003cUnit\u003eGeology\u003c/Unit\u003e  \u003cPosition\u003eT.SD/42\u003c/Position\u003e  \u003cRole\u003eGeologist\u003c/Role\u003e  \u003cGradeOfPost\u003eE.5\u003c/GradeOfPost\u003e  \u003cEmploymentType\u003eEmployee\u003c/EmploymentType\u003e  \u003cEmploymentStatus\u003eActive\u003c/EmploymentStatus\u003e  \u003cNationality\u003eGB\u003c/Nationality\u003e  \u003cLocation\u003eMoon Base Alpha\u003c/Location\u003e  \u003cRoomNumber\u003e4/31\u003c/RoomNumber\u003e  \u003cPhone\u003e11223\u003c/Phone\u003e  \u003cSupervisorStaffNumber\u003e421\u003c/SupervisorStaffNumber\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003cHostOrganisation\u003eMoonCo\u003c/HostOrganisation\u003e  \u003c/UserDetails\u003e  \u003c/User\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eNormalSend\u003c/TypeId\u003e  \u003cDescription\u003eA user sends a file to another user\u003c/Description\u003e  \u003cPurpose\u003e  \u003cJustification\u003eRock sample spectrum for analysis\u003c/Justification\u003e  \u003c/Purpose\u003e  \u003cSend\u003e  \u003cSource\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c!-- User belongs to the organisation generating the event so only an Id is required --\u003e  \u003c/User\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cUser\u003e  \u003cId\u003eC=GB, O=WeDoRocksCo, OU=Space, CN=Tom Thumb (UID=tthumb01)\u003c/Id\u003e  \u003c!-- User is external to the organisation generating the event so a rich UserDetails element is required--\u003e  \u003cUserDetails\u003e  \u003cId\u003etthumb011\u003c/Id\u003e  \u003cSurname\u003eThumb\u003c/Surname\u003e  \u003cInitials\u003eT\u003c/Initials\u003e  \u003cGroup\u003eSpace\u003c/Group\u003e  \u003cNationality\u003eGB\u003c/Nationality\u003e  \u003cOrganisation\u003eWeDoRocksCo\u003c/Organisation\u003e  \u003c/UserDetails\u003e  \u003c/User\u003e  \u003c/Destination\u003e  \u003cPayload\u003e  \u003cDocument\u003e  \u003cName\u003esamples1.zip\u003c/Name\u003e  \u003cSize\u003e14127312\u003c/Size\u003e  \u003c/Document\u003e  \u003c/Payload\u003e  \u003cOutcome\u003e  \u003cSuccess\u003etrue\u003c/Success\u003e  \u003cDescription\u003eTransfer Succeeded\u003c/Description\u003e  \u003c/Outcome\u003e  \u003c/Send\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e \u003c/Events\u003e ","categories":"","description":"An example of a user transferring a document to another user.\n","excerpt":"An example of a user transferring a document to another user.\n","ref":"/docs/complete-examples/xml/schema-actions/send-document.xml/","tags":["complete-example"],"title":"Send (Document)"},{"body":"\u003cEventDetail\u003e/\u003cSend\u003e//\u003cFile\u003e The following example illustrates an application transferring a file to a remote server.\nThis reflects an automated service, so attribution of the sender and receiver is to a host, not a user.\nThe action is that the file /appdata/alldata/gooddata/bestdata.xml of type text/xml is being sent from myhost.mydomain.org to yourhost.yourdomain.com. This file is 12345321 bytes in size and has a digest/checksum/hash of efd1dffd90296a69a8aecd7ecb1832b7. N.B. The type of digest used is application specific and not specified in this event.\nThe Outcome of the event is not defined, so we assume that the transfer was successful.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eFile Distribution\u003c/Name\u003e  \u003cEnvironment\u003eLive\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eFile Distributor 1.5\u003c/Generator\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e123.12.3.123\u003c/IPAddress\u003e  \u003c/Device\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eFile Transfer\u003c/TypeId\u003e  \u003cSend\u003e  \u003cSource\u003e  \u003cDevice\u003e  \u003cHostName\u003emyhost.mydomain.org\u003c/HostName\u003e  \u003c/Device\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDevice\u003e  \u003cHostName\u003eyourhost.yourdomain.com\u003c/HostName\u003e  \u003c/Device\u003e  \u003c/Destination\u003e  \u003cPayload\u003e  \u003cFile\u003e  \u003cType\u003etext/xml\u003c/Type\u003e  \u003cPath\u003e/appdata/alldata/gooddata/bestdata.xml\u003c/Path\u003e  \u003cSize\u003e12345321\u003c/Size\u003e  \u003cHash Type=\"MD5\"\u003eefd1dffd90296a69a8aecd7ecb1832b7\u003c/Hash\u003e  \u003c/File\u003e  \u003c/Payload\u003e  \u003c/Send\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of an application transferring a file to a remote server.\n","excerpt":"An example of an application transferring a file to a remote server.\n","ref":"/docs/complete-examples/xml/schema-actions/send-file.xml/","tags":["complete-example"],"title":"Send (File)"},{"body":"Events relating to the sending or receiving of some form of payload can be recorded with the \u003cSend\u003e and \u003cReceive\u003e elements. These events are at a higher level of abstraction than the low level \u003cNetwork\u003e/\u003cSend\u003e and \u003cNetwork\u003e/\u003cReceive\u003e elements, e.g. sending a file using some form of data transfer service.\n\u003cEventDetail\u003e  \u003cTypeId\u003eSendFile\u003c/TypeId\u003e  \u003cSend\u003e  \u003cSource\u003e  \u003cUser\u003e  \u003cId\u003eCN=Some Person (sperson), OU=people, O=Some Org,C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cUser\u003e  \u003cId\u003eCN=Person2 (person2), OU=people, O=Some Org, C=GB\u003c/Id\u003e  \u003c/User\u003e  \u003cDevice\u003e  \u003cHostName\u003eotherbox.someorg.org\u003c/HostName\u003e  \u003c/Device\u003e  \u003c/Destination\u003e  \u003cPayload\u003e  \u003cFile\u003e  \u003cName\u003emeetingMinutes.odf\u003c/Name\u003e  \u003c/File\u003e  \u003c/Payload\u003e  \u003cOutcome\u003e  \u003cSuccess\u003etrue\u003c/Success\u003e  \u003c/Outcome\u003e  \u003c/Send\u003e \u003c/EventDetail\u003e ","categories":"","description":"Sending or receiving something, typically to a remote system or user.\n","excerpt":"Sending or receiving something, typically to a remote system or user.\n","ref":"/docs/schema-actions/send-receive/","tags":["schema-action"],"title":"Send / Receive"},{"body":"This should be used to describe any form of shortcut or symbolic link to another object.\n","categories":"","description":"Any kind of shortcut or symbolic link.\n","excerpt":"Any kind of shortcut or symbolic link.\n","ref":"/docs/object-types/shortcut/","tags":["object-type"],"title":"Shortcut"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/shortcut/","tags":"","title":"shortcut"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/uninstall/","tags":"","title":"uninstall"},{"body":"This schema action structure is the action of last resort when the event cannot be accurately described with any of the other schema actions.\nThe structure is simply the extensible data structure allowing for most types of data to be recorded.\n","categories":"","description":"A fallback action for cases that cannot be described with the other schema actions.\n","excerpt":"A fallback action for cases that cannot be described with the other …","ref":"/docs/schema-actions/unknown/","tags":["schema-action"],"title":"Unknown"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/unknown/","tags":"","title":"unknown"},{"body":"The \u003cUpdate\u003e event is different to the previous \u003cCreate\u003e, \u003cView\u003e and \u003cDelete\u003e events because it is often desirable to know the before and after state of the data in question if this can be provided. Another reason for providing the before and after states of an object is that it allows for changes to individual properties to be described without the need to include all attributes of the object in question on every update. An example showing updating configuration properties is shown in the following example.\n\u003cEventDetail\u003e  \u003cTypeId\u003eUpdateConfiguration\u003c/TypeId\u003e  \u003cUpdate\u003e  \u003cBefore\u003e  \u003cObject\u003e  \u003cType\u003eConfiguration\u003c/Type\u003e  \u003cData Name=\"FileAccess\" Value=\"none\"/\u003e  \u003c/Object\u003e  \u003c/Before\u003e  \u003cAfter\u003e  \u003cObject\u003e  \u003cType\u003eConfiguration\u003c/Type\u003e  \u003cData Name=\"FileAccess\" Value=\"all\"/\u003e  \u003c/Object\u003e  \u003c/After\u003e  \u003c/Update\u003e \u003c/EventDetail\u003e ","categories":"","description":"The action of updating or modifying something.\n","excerpt":"The action of updating or modifying something.\n","ref":"/docs/schema-actions/update/","tags":["schema-action"],"title":"Update"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/update/","tags":"","title":"update"},{"body":"This is used to describe a user entity in a system. This could be the user account in a web application, the identity of a person in an access control system, a user profile in a chat application or a user account on a piece of configurable hardware.\nThe full details of the user can also be recorded, such as the position within the organisation, if known.\nIt is important to consider that the user account is not necessarily under the control of the person to whom the account has been assigned.\n","categories":"","description":"Describes a user or user account in a system.\n","excerpt":"Describes a user or user account in a system.\n","ref":"/docs/object-types/user/","tags":["object-type"],"title":"User"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/user/","tags":"","title":"user"},{"body":"","categories":"","description":"","excerpt":"","ref":"/schema_actions/view/","tags":"","title":"view"},{"body":"This object type is used to describe the session used when viewing another user’s session, e.g. screen sharing or remote assistance type activities.\n","categories":"","description":"A screen sharing or remote desktop session.\n","excerpt":"A screen sharing or remote desktop session.\n","ref":"/docs/object-types/virtual-session/","tags":["object-type"],"title":"Virtual Session"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/virtual-session/","tags":"","title":"virtual-session"},{"body":"This is used to record a voice over IP call between parties. The \u003cPhoneNumber\u003e element represents the phone number of the calling party.\n","categories":"","description":"A Voice over IP call.\n","excerpt":"A Voice over IP call.\n","ref":"/docs/object-types/voip/","tags":["object-type"],"title":"VOIP"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/voip/","tags":"","title":"voip"},{"body":"This can be used to describe any form of association between other objects. For example in a social networking type application links are made between user accounts. This \u003cAssociation\u003e object would allow the creation/modification/deletion of one of these links to be recorded.\n","categories":"","description":"Any form of association between other objects.\n","excerpt":"Any form of association between other objects.\n","ref":"/docs/object-types/association/","tags":["object-type"],"title":"Association"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/association/","tags":"","title":"association"},{"body":"This is typically used within a \u003cView\u003e schema action and is intended to record the details of a banner, pop-up or warning message that is displayed to a user, along with the version and contents of that message.\nIts objective is to record that the user has seen a message alerting them to the terms of use for a particular system.\n","categories":"","description":"A banner of pop-up displayed to the user.\n","excerpt":"A banner of pop-up displayed to the user.\n","ref":"/docs/object-types/banner/","tags":["object-type"],"title":"Banner"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/banner/","tags":"","title":"banner"},{"body":"This is used to describe a single message in an instant messaging application. The \u003cSessionId\u003e element can be populated to allow multiple events for the same chat session to be associated at a later date. This is used for direct user to user chat as opposed to \u003cGroupChat\u003e which is used for chatting to a group of users via a chat room.\nA chat message is typically modelled within a \u003cCreate\u003e schema action.\n","categories":"","description":"A single chat message in an instant message application.\n","excerpt":"A single chat message in an instant message application.\n","ref":"/docs/object-types/chat/","tags":["object-type"],"title":"Chat"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/chat/","tags":"","title":"chat"},{"body":"This describes any form of configuration for a system or piece of hardware, e.g. describing some or all of the configuration of a firewall. Due to the very varied nature of software/hardware configuration there is no additional predefined structure beyond the base object structure.\n","categories":"","description":"Configuration for a system or piece of hardware.\n","excerpt":"Configuration for a system or piece of hardware.\n","ref":"/docs/object-types/configuration/","tags":["object-type"],"title":"Configuration"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/configuration/","tags":"","title":"configuration"},{"body":"This is used to describe the criteria applied in any kind of search or filter operation along with the returned results, if known. The \u003cQuery\u003e element is used to record the actual query terms used, either in its raw form (e.g. SQL or XPath), as a nested hierarchy of operators and expressions or as a set of simple \u003cInclude\u003e or \u003cexclude\u003e elements.\nFor example, this may be used to describe the criteria for a query that has been stored for re-use, e.g. an \u003cUpdate\u003e/\u003cCriteria\u003e event where a user is making changes to a stored query but not actually executing the query.\nSee Complete Examples for example events.\n","categories":"","description":"The criteria used in a filter or query.\n","excerpt":"The criteria used in a filter or query.\n","ref":"/docs/object-types/criteria/","tags":["object-type"],"title":"Criteria"},{"body":"This is used to describe any form of digital document, such as a Word document, PDF or a simple text file, along with its location and most recent created/modified/accessed times.\nThe \u003cPermissions\u003e element that is part of the base object structure can be used to define all the user/group permissions in place on the document in the case of a document management system or similar.\n","categories":"","description":"Any form of digital document.\n","excerpt":"Any form of digital document.\n","ref":"/docs/object-types/document/","tags":["object-type"],"title":"Document"},{"body":"This object type is used to describe an email that has either been sent, received or saved in some way. It can record all parties involved in the email.\n","categories":"","description":"An email that has been sent or received.\n","excerpt":"An email that has been sent or received.\n","ref":"/docs/object-types/email/","tags":["object-type"],"title":"Email"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/email/","tags":"","title":"email"},{"body":"This is used to describe any kind of file on a file system or file repository, e.g. a data file, log file, backup file, etc. The \u003cMedia\u003e element can be used to describe the type of media it is stored on. The hash of the file can also be recorded using \u003cHash\u003e so the actual version of the file interacted with is known. If a hash is supplied then the name of the hashing algorithm should also be supplied in the Type attribute.\nThe object type \u003cDocument\u003e may be more appropriate unless the file is being referred to in its generic capacity as a file.\n","categories":"","description":"Any kind of file on a file system.\n","excerpt":"Any kind of file on a file system.\n","ref":"/docs/object-types/file/","tags":["object-type"],"title":"File"},{"body":"This is very similar to the \u003cFile\u003e object type except that it is used to record a folder on a file system or file repository.\n","categories":"","description":"","excerpt":"This is very similar to the \u003cFile\u003e object type except that it is used …","ref":"/docs/object-types/folder/","tags":["object-type"],"title":"Folder"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/folder/","tags":"","title":"folder"},{"body":"This used to define a group entity, e.g. a group of users. The Group itself may have other groups within it.\n","categories":"","description":"A grouping of other objects, e.g. a group of users.\n","excerpt":"A grouping of other objects, e.g. a group of users.\n","ref":"/docs/object-types/group/","tags":["object-type"],"title":"Group"},{"body":"This is similar to the \u003cChat\u003e object with the difference that it is for recording a group chat message either from a user to a chat room or from a room to a user.\n","categories":"","description":"A chat message sent to/from a chat room/group.\n","excerpt":"A chat message sent to/from a chat room/group.\n","ref":"/docs/object-types/group-chat/","tags":["object-type"],"title":"Group Chat"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/group-chat/","tags":"","title":"group-chat"},{"body":"This is the object type of last resort when the object involved in the event cannot be described using any of the other types. Due to the unknown nature of the object, the \u003cData\u003e element structure is provided in addition to the base object structure.\n","categories":"","description":"A generic object type for anything not covered by the other object types.\n","excerpt":"A generic object type for anything not covered by the other object …","ref":"/docs/object-types/object/","tags":["object-type"],"title":"Object"},{"body":"\u003cEventDetail\u003e/\u003cAlert\u003e/\u003cNetwork\u003e This example illustrates an alert being fired by from a network device performing packet filtering:\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003c!-- Alert Network event --\u003e  \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eGeology Image Database\u003c/Name\u003e  \u003cEnvironment\u003eLive\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003egeoimg v4.1\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003egeodb.servers.mycloud.myorg\u003c/HostName\u003e  \u003cIPAddress\u003e104.105.106.107\u003c/IPAddress\u003e  \u003cMACAddress\u003eAB:CB:BC:DE:EE:FF\u003c/MACAddress\u003e  \u003c/Device\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003c/User\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003e4921\u003c/TypeId\u003e  \u003cDescription\u003eA packet was rejected by filter xyz\u003c/Description\u003e  \u003cAlert\u003e  \u003cType\u003eNetwork\u003c/Type\u003e  \u003cSeverity\u003eMinor\u003c/Severity\u003e  \u003cPriority\u003eHigh\u003c/Priority\u003e  \u003cSubject\u003eFilter XYZ\u003c/Subject\u003e  \u003cNetwork\u003e  \u003cSource\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.0.4\u003c/IPAddress\u003e  \u003cPort\u003e56123\u003c/Port\u003e  \u003c/Device\u003e  \u003c/Source\u003e  \u003cDestination\u003e  \u003cDevice\u003e  \u003cIPAddress\u003e192.168.7.5\u003c/IPAddress\u003e  \u003cPort\u003e53\u003c/Port\u003e  \u003c/Device\u003e  \u003c/Destination\u003e  \u003c/Network\u003e  \u003c/Alert\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"An example of an alert being fired from a network device.\n","excerpt":"An example of an alert being fired from a network device.\n","ref":"/docs/complete-examples/xml/schema-actions/alert-network.xml/","tags":["complete-example"],"title":"Alert (Network)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/faq/","tags":"","title":"faq"},{"body":"\u003cEventDetail\u003e/\u003cImport\u003e//\u003cFile\u003e The following example illustrates how removable media use could be represented within the events-logging schema.\nThe action is that user jc101 has read the file E:/DCIM/Spacecam101/141516.jpg from a removable USB drive onto the workstation LUNA/LUNADESK35.\nN.B. Although the user might not have actually read the object represented in the EventDetail, all read operations (including file system read/open operations and web page accesses, etc) are represented in the schema as View.\nThe nature of the event (type of View) can be indicated within \u003cEventDetail\u003e/\u003cTypeId\u003e as we have done in this example, and where possible a more human-readable explanation within \u003cEventDetail\u003e/\u003cDescription\u003e.\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cEvents  xmlns=\"event-logging:3\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"event-logging:3 file://event-logging-v999.99.9-documentation.xsd\"  Version=\"999.99.9\"\u003e   \u003cEvent\u003e  \u003cEventTime\u003e  \u003cTimeCreated\u003e2017-01-02T03:04:05.678Z\u003c/TimeCreated\u003e  \u003c/EventTime\u003e   \u003cEventSource\u003e  \u003cSystem\u003e  \u003cName\u003eSpace Desk\u003c/Name\u003e  \u003cEnvironment\u003eLunaDomain\u003c/Environment\u003e  \u003cOrganisation\u003eACMECoolResearch\u003c/Organisation\u003e  \u003c/System\u003e  \u003cGenerator\u003eRMMaster2000 RM Control\u003c/Generator\u003e  \u003cDevice\u003e  \u003cHostName\u003ermmaster.luna.mydomain.org\u003c/HostName\u003e  \u003c/Device\u003e  \u003cClient\u003e  \u003cName\u003eLUNA/LUNADESK35\u003c/Name\u003e  \u003cHostName\u003elunadesk35.lunadesk.luna.mydomain.org\u003c/HostName\u003e  \u003c/Client\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003cDomain\u003eACMECoolResearch/Users\u003c/Domain\u003e  \u003c/User\u003e  \u003cInteractive\u003etrue\u003c/Interactive\u003e  \u003c/EventSource\u003e   \u003cEventDetail\u003e  \u003cTypeId\u003eReadRM\u003c/TypeId\u003e  \u003cDescription\u003eUser has read a file from removable media\u003c/Description\u003e  \u003cImport\u003e  \u003cSource\u003e  \u003cFile\u003e  \u003cName\u003e141516.jpg\u003c/Name\u003e  \u003cDescription\u003eJPG Image\u003c/Description\u003e  \u003cPermissions\u003e  \u003cPermission\u003e  \u003cUser\u003e  \u003cId\u003ejc101\u003c/Id\u003e  \u003cDomain\u003eACMECoolResearch/Users\u003c/Domain\u003e  \u003c/User\u003e  \u003cAllow\u003eRead\u003c/Allow\u003e  \u003c/Permission\u003e  \u003c/Permissions\u003e  \u003cPath\u003eE:/DCIM/Spacecam101/141516.jpg\u003c/Path\u003e  \u003cSize\u003e5445121\u003c/Size\u003e  \u003cMedia\u003e  \u003cType\u003eUSBMassStorage\u003c/Type\u003e  \u003cRemovable\u003etrue\u003c/Removable\u003e  \u003c/Media\u003e  \u003cHash Type=\"SHA-256\"\u003e66E0E8221E8B899F08658DA444064E631FA9B8ABE9068A208AFE051BD4E7B960\u003c/Hash\u003e  \u003c/File\u003e  \u003c/Source\u003e  \u003cOutcome\u003e  \u003cPermitted\u003etrue\u003c/Permitted\u003e  \u003c/Outcome\u003e  \u003c/Import\u003e  \u003c/EventDetail\u003e   \u003c/Event\u003e  \u003c/Events\u003e ","categories":"","description":"","excerpt":"\u003cEventDetail\u003e/\u003cImport\u003e//\u003cFile\u003e The following example illustrates how …","ref":"/docs/complete-examples/xml/schema-actions/import-file.xml/","tags":["complete-example"],"title":"Import (File)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/object_types/network/","tags":"","title":"network"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/complete-examples/xml/object-types/","tags":"","title":"Object Types"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/complete-examples/xml/schema-actions/","tags":"","title":"Schema Actions"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/complete-examples/xml/","tags":"","title":"XML"},{"body":"What is it? An XML Schema    for describing and recording events for the purposes of auditing the actions of users and systems.\nEach action performed by a user, system or application component during the course of operation produces one or more events. Some of these events need to be recorded for the purposes of audit. This XML Schema provides a standard language for doing that.\nHistory The event-logging XML Schema was born out of a need to standardise the format of events being logged by hundreds of different systems. Events were being logged in a large variety of different formats (csv, fixed-width, structured, etc.) and with a variety of different data fields. This made it very difficult to process, analyse or search the events in a common way.\nThe event-logging XML Schema was created to provide a common language that events could either be written in or be normalised into. The result is a set of events from many different systems that can all be processed in a common way.\nWhat it captures The Schema aims to capture four main things:\nWhen did it happen? The time that the event happened in a single format ( ISO-8601    ) and time zone ( UTC    ). Recording all events in UTC ensures a consistent view of the data.\nWho or what caused it? Which user or device triggered the event. This is typically a unique identifier for the user or an FQDN    or an IP address for a device.\nWhere did it happen? Details of where the user or device was physically located when the event occurred. This may also include the time-zone of the user/device.\nWhat happened? Details of the event that occurred. This includes recording the action (i.e. verb) of the event, e.g. creating, deleting, viewing, etc. with action specific detail.\nEvent decoration Events will typically provide minimal information about the user/device that triggered the event, e.g. just a user ID. The Schema allows for additional data to be added into the event record by performing lookups in databases using key identifiers in the event. Examples of decoration include populating the event record with Human Resources data such as full name and job role, or populating the physical location of a device by looking up its IP address in an asset management database. This allows for much richer events to be stored.\n","categories":"","description":"A common standard for auditable events.\n","excerpt":"A common standard for auditable events.\n","ref":"/about/about/","tags":"","title":"About the event-logging XML Schema"},{"body":"","categories":"","description":"","excerpt":"","ref":"/about/","tags":"","title":"Abouts"},{"body":"","categories":"","description":"The event-logging XML Schema is an open source product whose evolution is enhanced by the community of users and developers that contribute improvements. This section provides the resources for this community, to help with evolving and documenting the Schema.\n","excerpt":"The event-logging XML Schema is an open source product whose evolution …","ref":"/community/","tags":"","title":"Community"},{"body":"   event-logging XML Schema Learn More   Download   A common standard for auditable events\nOne format for writing auditable events in\nOne format to normalise existing event formats into\n       When? What was the time when the event occurred?\n    Who? Who was the user and/or device that caused the event to occur?\n    Where? Where was the user and/or device located when the event happened?\n    What? What data was created, updated, deleted etc.?\n     ","categories":"","description":"","excerpt":"   event-logging XML Schema Learn More   Download   A common standard …","ref":"/","tags":"","title":"event-logging XML Schema"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","categories":"","description":"","excerpt":"This is the blog section. It has two categories: News and Releases. …","ref":"/news/","tags":"","title":"News / Releases"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"}]